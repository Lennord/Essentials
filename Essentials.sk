#   . Essentials (Skript), Developped by alexisl315 (Alias: Lennord).
#   . This skript allows you to redo all or almost all the functionality of the EssentialsX plugin.

#   --> Code:

on join:
	yaml file "plugins/Essentials/players/%player%/who.yml" doesn't exist:
		load "plugins/Essentials/players/%player%/who.yml"
		set yaml value "firstjoin.stats" from "who" to true
		set yaml value "firstjoin.date" from "who" to "%now%"
		set yaml value "firstjoin.stats" from "who" to true
		set yaml value "firstjoin.date" from "who" to "%now%"
		set yaml value "vanish.stats" from "who" to false
		set yaml value "vanish.date" from "who" to "%now%"
		set yaml value "freeze.stats" from "who" to false
		set yaml value "freeze.date" from "who" to "%now%"
		set yaml value "join.date" from "who" to "%now%"
		set yaml value "afk.stats" from "who" to false
		set yaml value "afk.date" from "who" to "%now%"
		set yaml value "back.stats" from "who" to false
		delete yaml value "back.location" from "who"
		set yaml value "ban.stats" from "who" to false
		delete yaml value "ban.type-ban" from "who"
		delete yaml value "ban.date" from "who"
		delete yaml value "ban.reason" from "who"
		delete yaml value "ban.times" from "who"
		set yaml value "mute.stats" from "who" to false
		delete yaml value "mute.type-ban" from "who"
		delete yaml value "mute.date" from "who"
		delete yaml value "mute.reason" from "who"
		delete yaml value "mute.times" from "who"
		set yaml value "homes.stats" from "who" to false
		save yaml "who"
		unload yaml "who"
	else:
		set yaml value "join.date" from "who" to "%now%"
		set yaml value "afk.stats" from "who" to false
		set yaml value "afk.date" from "who" to "%now%"
		set yaml value "back.stats" from "who" to false
		delete yaml value "back.location" from "who"
		set yaml value "vanish.stats" from "who" to false
		set yaml value "vanish.date" from "who" to "%now%"
		save yaml "who"
		unload yaml "who"

on load:
	yaml file "plugins/Essentials/config.yml" doesn't exist:
		load "plugins/Essentials/config.yml"
		set yaml value "language" from "config" to "English"
		set yaml value "afk.cooldown-kicked" from "config" to 300
		set yaml value "back.cooldown-teleport" from "config" to 5
		set yaml value "heal.cooldown-use" from "config" to 5
		set yaml value "feed.cooldown-use" from "config" to 5
		set yaml value "home.cooldown-use" from "config" to 5
		set yaml value "tpaccept.cooldown-teleport" from "config" to 5
		set yaml value "spawn.stats" from "config" to false
		set yaml value "spawn.cooldown-teleport" from "config" to 5
		set yaml value "random-teleport.cooldown-teleport" from "config" to 5
		set yaml value "random-teleport.max-block" from "config" to 50000
		set yaml value "random-teleport.min-block" from "config" to 1000
		set yaml value "chat.format-stats" from "config" to true
		set yaml value "chat.stats" from "config" to true
		set yaml value "chat.date" from "config" to "%now%"
		set yaml value "chat.author" from "config" to "%sender%"
		set yaml value "motd.stats" from "config" to true
		set yaml value "motd.line-1" from "config" to "&f[&6SERVER NAME&f] &8x &7MINIGAMES AND MORES"
		set yaml value "motd.line-2" from "config" to "    &7SERVER VERSION: &c1.0.0"
		set yaml value "maintenance.stats" from "config" to true
		set yaml value "maintenance.date" from "config" to "%now%"
		set yaml value "firstjoin-message.stats" from "config" to true
		set yaml value "join-message.stats" from "config" to true
		set yaml value "quit-message.stats" from "config" to true
		set yaml value "kits.stats" from "config" to false
		set yaml value "kits.cooldown-use" from "config" to 5
		set yaml value "warps.stats" from "config" to false
		set yaml value "warps.cooldown-use" from "config" to 5
		set yaml list "block-place" from "config" to tnt
		save yaml "config"
		unload yaml "config"
	else:
		load "plugins/Essentials/config.yml"
		yaml value "language" from "config" != "English":
			set yaml value "language" from "config" to "English"
		save yaml "config"
		unload yaml "config"

on load:
	send "&7[&bEssentials&7] &8x &2Enabled" to console

on unload:
	send "&7[&bEssentials&7] &8x &cDisabled" to console

on server list ping:
	load "plugins/Essentials/config.yml"
	yaml value "motd.stats" from "config" = true:
		set the motd to "%yaml value "motd.line-1" from "config"%%nl%%yaml value "motd.line-2" from "config"%"

function EssentialsNoPermission(s: sender):
	load "plugins/Essentials/config.yml"
	yaml value "language" from "config" = "English":
		send "&4| &8x &cYou have not permission to use this command." to {_s}

function EssentialsNoBuild(s: sender):
	load "plugins/Essentials/config.yml"
	yaml value "language" from "config" = "English":
		send "&4| &8x &cYou have not permission to build and break the all blocks." to {_s}

function EssentialsNoCommandConsole(s: sender):
	load "plugins/Essentials/config.yml"
	yaml value "language" from "config" = "English":
		send "&4| &8x &cYou must be a player to use this command." to {_s}

function EssentialsPlayerOffline(s: sender, p: offline player):
	load "plugins/Essentials/config.yml"
	yaml value "language" from "config" = "English":
		send "&4| &8x &cThe player &6%{_p}% &cis offline." to {_s}

function EssentialsHelp(s: sender, typehelp: text):
	load "plugins/Essentials/config.yml"
	yaml value "language" from "config" = "English":
		{_typehelp} = "EssentialsCMD":
			send "" to {_s}
			send "&8| &8x &6Help:" to {_s}
			send "" to {_s}
			send "&8| &f/essentials &binfo &8x &7Seen informations of this skript." to {_s}
			send "&8| &f/essentials &breload &8x &7Reload this skript." to {_s}
			send "" to {_s}
		{_typehelp} = "AfkCMD":
			send "" to {_s}
			send "&8| &8x &6Help:" to {_s}
			send "" to {_s}
			{_s} = player:
				send "&8| &f/afk &8x &7Enable and Disable afk." to {_s}
			send "&8| &f/afk &7[&cname of player&7] &8x &7Enable and Disable afk for the player's online." to {_s}
			send "" to {_s}
		{_typehelp} = "BackCMD":
			send "" to {_s}
			send "&8| &8x &6Help:" to {_s}
			send "" to {_s}
			send "&8| &f/back &7[&cname of player&7] &8x &7Return player's location to the player's online." to {_s}
			send "" to {_s}
		{_typehelp} = "BanCMD":
			send "" to {_s}
			send "&8| &8x &6Help:" to {_s}
			send "" to {_s}
			send "&8| &f/ban &7[&cname of player&7] &7[&creason&7] &8x &7Ban the player's online." to {_s}
			send "" to {_s}
		{_typehelp} = "UnbanCMD":
			send "" to {_s}
			send "&8| &8x &6Help:" to {_s}
			send "" to {_s}
			send "&8| &f/unban &7[&cname of player&7] &8x &7Unban the player's online." to {_s}
			send "" to {_s}
		{_typehelp} = "TempbanCMD":
			send "" to {_s}
			send "&8| &8x &6Help:" to {_s}
			send "" to {_s}
			send "&8| &f/tempban &7[&cname of player] &7[&creason&7] &7[&ctimes&7] &8x &7Ban temporary the player's online." to {_s}
			send "" to {_s}
		{_typehelp} = "BroadcastCMD":
			send "" to {_s}
			send "&8| &8x &6Help:" to {_s}
			send "" to {_s}
			send "&8| &f/broadcast &7[&cname of world] &7[&cmessage&7] &8x &7Send message in the world type." to {_s}
			send "" to {_s}
		{_typehelp} = "ChatCMD":
			send "" to {_s}
			send "&8| &8x &6Help:" to {_s}
			send "" to {_s}
			send "&8| &f/chat &benable&7/&bon &8x &7Enable the chat for all players." to {_s}
			send "&8| &f/chat &bdisable&7/&boff &8x &7Disable the chat for all players." to {_s}
			send "&8| &f/chat &btoggle&7 &8x &7Enable and disable the chat for all players." to {_s}
			send "&8| &f/chat &bclear &8x &7Clear the chat for all players." to {_s}
			send "" to {_s}
		{_typehelp} = "ClearinventoryCMD":
			send "" to {_s}
			send "&8| &8x &6Help:" to {_s}
			send "" to {_s}
			send "&8| &f/clearinventory &7[&cname of player&7] &8x &7Clear player's inventory of the player's online." to {_s}
			send "" to {_s}
		{_typehelp} = "DeopCMD":
			send "" to {_s}
			send "&8| &8x &6Help:" to {_s}
			send "" to {_s}
			send "&8| &f/deop &7[&cname of player&7] &8x &7Deop the player's online." to {_s}
			send "" to {_s}
		{_typehelp} = "OpCMD":
			send "" to {_s}
			send "&8| &8x &6Help:" to {_s}
			send "" to {_s}
			send "&8| &f/op &7[&cname of player&7] &8x &7Op the player's online." to {_s}
			send "" to {_s}
		{_typehelp} = "GetposCMD":
			send "" to {_s}
			send "&8| &8x &6Help:" to {_s}
			send "" to {_s}
			send "&8| &f/getpos &7[&cname of player&7] &8x &7Seen location of the player's online." to {_s}
			send "" to {_s}
		{_typehelp} = "HelpopCMD":
			send "" to {_s}
			send "&8| &8x &6Help:" to {_s}
			send "" to {_s}
			send "&8| &f/helpop &7[&cname of player&7] &8x &7Send message for the help." to {_s}
			send "" to {_s}
		{_typehelp} = "GiveCMD":
			send "" to {_s}
			send "&8| &8x &6Help:" to {_s}
			send "" to {_s}
			send "&8| &f/give &7[&cname of item&7] &7[&cnumber&7] &8x &7Give item type." to {_s}
			send "" to {_s}
		{_typehelp} = "SkullCMD":
			send "" to {_s}
			send "&8| &8x &6Help:" to {_s}
			send "" to {_s}
			send "&8| &f/skull &7[&cname of player&7] &8x &7Give the head of player's offline." to {_s}
			send "" to {_s}
		{_typehelp} = "SlapCMD":
			send "" to {_s}
			send "&8| &8x &6Help:" to {_s}
			send "" to {_s}
			send "&8| &f/slap &7[&cname of player&7] &8x &7Slap the player's offline." to {_s}
			send "" to {_s}
		{_typehelp} = "MeCMD":
			send "" to {_s}
			send "&8| &8x &6Help:" to {_s}
			send "" to {_s}
			send "&8| &f/me &7[&cmessage&7] &8x &7Send message of all players." to {_s}
			send "" to {_s}
		{_typehelp} = "InvseeCMD":
			send "" to {_s}
			send "&8| &8x &6Help:" to {_s}
			send "" to {_s}
			send "&8| &f/invsee &7[&cname of player&7] &8x &7Open inventory of player's online." to {_s}
			send "" to {_s}
		{_typehelp} = "WeatherCMD":
			send "" to {_s}
			send "&8| &8x &6Help:" to {_s}
			send "" to {_s}
			send "&8| &f/weather &bclear &8x &7Clear the weather of the player's world." to {_s}
			send "&8| &f/weather &bsun &8x &7Set sun of the weather of the player's world." to {_s}
			send "&8| &f/weather &brain &8x &7Set rain of the weather of the player's world." to {_s}
			send "&8| &f/weather &bthunder &8x &7Set thunder of the weather of the player's world." to {_s}
			send "" to {_s}
		{_typehelp} = "SpeedCMD":
			send "" to {_s}
			send "&8| &8x &6Help:" to {_s}
			send "" to {_s}
			send "&8| &f/speed &bclear &8x &7Clear the speed fly and walk." to {_s}
			send "&8| &f/speed &bfly &7[&cnumber&7] &8x &7Set speed number of the speed fly." to {_s}
			send "&8| &f/speed &bwalk &7[&cnumber&7] &8x &7Set speed number of the speed walk." to {_s}
			send "" to {_s}
		{_typehelp} = "SpawnCMD":
			send "" to {_s}
			send "&8| &8x &6Help:" to {_s}
			send "" to {_s}
			send "&8| &f/spawn &7[&cname of player&7] &8x &7Teleport player's online of the spawn point." to {_s}
			send "" to {_s}
		{_typehelp} = "MsgCMD":
			send "" to {_s}
			send "&8| &8x &6Help:" to {_s}
			send "" to {_s}
			send "&8| &f/msg &7[&cname of player&7] &7[&cmessage&7] &8x &7Send message to player's online." to {_s}
			send "" to {_s}
		{_typehelp} = "MaintenanceCMD":
			send "" to {_s}
			send "&8| &8x &6Help:" to {_s}
			send "" to {_s}
			send "&8| &f/maintenance &benable&7/&bon &8x &7Enable the maintenance of this server." to {_s}
			send "&8| &f/maintenance &bdisable&7/&boff &8x &7Disable the maintenance of this server." to {_s}
			send "&8| &f/maintenance &btoggle &8x &7Enable and disable the maintenance of this server." to {_s}
			send "" to {_s}
		{_typehelp} = "KickCMD":
			send "" to {_s}
			send "&8| &8x &6Help:" to {_s}
			send "" to {_s}
			send "&8| &f/kick &7[&cname of player&7] &7[&cmessage&7] &8x &7Kick player's online." to {_s}
			send "" to {_s}
		{_typehelp} = "KickallCMD":
			send "" to {_s}
			send "&8| &8x &6Help:" to {_s}
			send "" to {_s}
			send "&8| &f/kickall &7[&cmessage&7] &8x &7Kick all player's online." to {_s}
			send "" to {_s}
		{_typehelp} = "KillCMD":
			send "" to {_s}
			send "&8| &8x &6Help:" to {_s}
			send "" to {_s}
			send "&8| &f/kill &7[&cname of player&7] &8x &7Kill all player's online." to {_s}
			send "" to {_s}
		{_typehelp} = "GamemodeCMD":
			send "" to {_s}
			send "&8| &8x &6Help:" to {_s}
			send "" to {_s}
			send "&8| &f/gamemode &bsurvival &8x &7Set your gamemode to survival." to {_s}
			send "&8| &f/gamemode &bcreative &8x &7Set your gamemode to creative." to {_s}
			send "&8| &f/gamemode &badventure &8x &7Set your gamemode to adventure." to {_s}
			send "&8| &f/gamemode &bspectator &8x &7Set your gamemode to spectator." to {_s}
			send "" to {_s}
			send "&8| &f/gamemode &bsurvival &7[&cname of player&7] &8x &7Set gamemode to survival of the player's online." to {_s}
			send "&8| &f/gamemode &bcreative &7[&cname of player&7] &8x &7Set gamemode to creative of the player's online." to {_s}
			send "&8| &f/gamemode &badventure &7[&cname of player&7] &8x &7Set gamemode to adventure of the player's online." to {_s}
			send "&8| &f/gamemode &bspectator &7[&cname of player&7] &8x &7Set gamemode to spectator of the player's online." to {_s}
			send "" to {_s}
		{_typehelp} = "MuteCMD":
			send "" to {_s}
			send "&8| &8x &6Help:" to {_s}
			send "" to {_s}
			send "&8| &f/mute &7[&cname of player&7] &7[&creason&7] &8x &7Mute the player's online." to {_s}
			send "" to {_s}
		{_typehelp} = "UnmuteCMD":
			send "" to {_s}
			send "&8| &8x &6Help:" to {_s}
			send "" to {_s}
			send "&8| &f/unmute &7[&cname of player&7] &8x &7Unmute the player." to {_s}
			send "" to {_s}
		{_typehelp} = "TempmuteCMD":
			send "" to {_s}
			send "&8| &8x &6Help:" to {_s}
			send "" to {_s}
			send "&8| &f/tempmute &7[&cname of player&7] &7[&creason&7] &7[&ctimes&7] &8x &7Mute temporary the player's online." to {_s}
			send "" to {_s}
		{_typehelp} = "SethomeCMD":
			send "" to {_s}
			send "&8| &8x &6Help:" to {_s}
			send "" to {_s}
			send "&8| &f/sethome &7[&cname of home&7] &8x &7Set home at your location." to {_s}
			send "" to {_s}
		{_typehelp} = "DelhomeCMD":
			send "" to {_s}
			send "&8| &8x &6Help:" to {_s}
			send "" to {_s}
			send "&8| &f/delhome &7[&cname of home&7] &8x &7Delete home." to {_s}
			send "" to {_s}
		{_typehelp} = "HomeCMD":
			send "" to {_s}
			send "&8| &8x &6Help:" to {_s}
			send "" to {_s}
			send "&8| &f/home &7[&cname of home&7] &8x &7Teleport at location of home type." to {_s}
			send "" to {_s}
		{_typehelp} = "FreezeCMD":
			send "" to {_s}
			send "&8| &8x &6Help:" to {_s}
			send "" to {_s}
			send "&8| &f/freeze &7[&cname of player&7] &8x &7Freeze player's online." to {_s}
			send "" to {_s}
		{_typehelp} = "SetkitCMD":
			send "" to {_s}
			send "&8| &8x &6Help:" to {_s}
			send "" to {_s}
			send "&8| &f/setkit &7[&cname of kit&7] &8x &7Create kit." to {_s}
			send "" to {_s}
		{_typehelp} = "DelkitCMD":
			send "" to {_s}
			send "&8| &8x &6Help:" to {_s}
			send "" to {_s}
			send "&8| &f/delkit &7[&cname of kit&7] &8x &7Delete kit." to {_s}
			send "" to {_s}
		{_typehelp} = "KitCMD":
			send "" to {_s}
			send "&8| &8x &6Help:" to {_s}
			send "" to {_s}
			send "&8| &f/kit &7[&cname of kit&7] &8x &7Give of kit type." to {_s}
			send "" to {_s}
		{_typehelp} = "SeenCMD":
			send "" to {_s}
			send "&8| &8x &6Help:" to {_s}
			send "" to {_s}
			send "&8| &f/seen &7[&cname of player&7] &8x &7Seen information of player's online." to {_s}
			send "" to {_s}
		{_typehelp} = "TpaCMD":
			send "" to {_s}
			send "&8| &8x &6Help:" to {_s}
			send "" to {_s}
			send "&8| &f/tpa &7[&cname of player&7] &8x &7Request teleportation of player's online." to {_s}
			send "" to {_s}
		{_typehelp} = "TpacceptCMD":
			send "" to {_s}
			send "&8| &8x &6Help:" to {_s}
			send "" to {_s}
			send "&8| &f/tpaccept &8x &7Accept teleportation of player's online." to {_s}
			send "" to {_s}
		{_typehelp} = "TpdenyCMD":
			send "" to {_s}
			send "&8| &8x &6Help:" to {_s}
			send "" to {_s}
			send "&8| &f/tpdeny &8x &7Deny teleportation of player's online." to {_s}
			send "" to {_s}

function EssentialsCMDAfk1(s: sender):
	load "plugins/Essentials/players/%{_s}%/who.yml"
	yaml value "afk.stats" from "who" = false:
		set yaml value "afk.stats" from "who" to true
		set yaml value "afk.date" from "who" to "%now%"
		load "plugins/Essentials/config.yml"
		yaml value "language" from "config" = "English":
			send "&7You have enabled to the afk mode." to {_s}
	else:
		set yaml value "afk.stats" from "who" to false
		set yaml value "afk.date" from "who" to "%now%"
		load "plugins/Essentials/config.yml"
		yaml value "language" from "config" = "English":
			send "&7You have disabled to the afk mode." to {_s}
	save yaml "who"
	unload yaml "who"
	stop

function EssentialsCMDAfk2(s: sender, p: offline player):
	{_s} has permission "essentials.afk.others" or "essentials.*":
		load "plugins/Essentials/players/%{_p}%/who.yml"
		yaml value "afk.stats" from "who" = false:
			set yaml value "afk.stats" from "who" to true
			set yaml value "afk.date" from "who" to "%now%"
			load "plugins/Essentials/config.yml"
			yaml value "language" from "config" = "English":
				send "&7You have enabled to the afk mode for the player &6%{_p}%&7." to {_s}
		else:
			set yaml value "afk.stats" from "who" to false
			set yaml value "afk.date" from "who" to "%now%"
			load "plugins/Essentials/config.yml"
			yaml value "language" from "config" = "English":
				send "&7You have disabled to the afk mode for the player &6%{_p}%&7." to {_s}
		save yaml "who"
		unload yaml "who"
		stop
	else:
		EssentialsNoPermission({_s})

function EssentialsNoAfk(s: sender):
	load "plugins/Essentials/players/%{_s}%/who.yml"
	yaml value "afk.stats" from "who" = true:
		set yaml value "afk.stats" from "who" to false
		set yaml value "afk.date" from "who" to "%now%"
		load "plugins/Essentials/config.yml"
		yaml value "language" from "config" = "English":
			loop all players:
				loop-player has permission "essentials.*" or "essentials.afk.message" or "essentials.afk.*":
					send "&7[&cAFK-DISABLED&7] &8x &f%{_s}%" to loop-player
		save yaml "who"
		unload yaml "who"
		stop

function EssentialsCMDAntioch1(s: sender):
	spawn 1 primed tnt at the targeted block of {_s}
	send "&7You have spawn 1 primed tnt at the location of target's block." to {_s}
	stop

function EssentialsCMDAntioch2(s: sender, p: offline player):
	{_s} has permission "essentials.antioch.others" or "essentials.*":
		spawn 1 primed tnt at {_p}
		send "&7You have spawn 1 primed tnt at the location of player &6%{_p}%&7." to {_s}
	else:
		EssentialsNoPermission({_s})

function EssentialsCMDRandomTeleport(s: sender):
	load "plugins/Essentials/players/%{_s}%/who.yml"
	yaml value "back.stats" from "who" = false:
		set yaml value "back.stats" from "who" to true
		set yaml value "back.location" from "who" to location of {_s}
	save yaml "who"
	unload yaml "who"
	load "plugins/Essentials/config.yml"
	{_s} has permission "essentials.*" or "essentials.randomteleport.bypass":
		set {_Essentials::rtp::blocks} to location at random number between yaml value "random-teleport.min-block" from "config" and yaml value "random-teleport.max-block" from "config", 0, random number between yaml value "random-teleport.min-block" from "config" and yaml value "random-teleport.max-block" from "config" in world {_s}'s world
		loop blocks above {_Essentials::rtp::blocks}:
			loop-block and block above loop-block are air or cave air:
				teleport {_s} to loop-block
				block under {_s} is cave air or water or lava:
					set block under {_s} to stone
				yaml value "language" from "config" = "English":
					send "&7You have been teleported at random location." to {_s}
	else:
		yaml value "language" from "config" = "English":
			send "&7You have waiting &6%yaml value "random-teleport.cooldown-teleport" from "config"% &7seconds for teleport of location of random teleport." to {_s}
		wait ("%yaml value "random-teleport.cooldown-teleport" from "config"% seconds" parsed as timespan)
		set {_Essentials::rtp::blocks} to location at random number between yaml value "random-teleport.min-block" from "config" and yaml value "random-teleport.max-block" from "config", 0, random number between yaml value "random-teleport.min-block" from "config" and yaml value "random-teleport.max-block" from "config" in world {_s}'s world
		loop blocks above {_Essentials::rtp::blocks}:
			loop-block and block above loop-block are air or cave air:
				teleport {_s} to loop-block
				block under {_s} is cave air or water or lava:
					set block under {_s} to stone
				yaml value "language" from "config" = "English":
					send "&7You have been teleported at random location." to {_s}

function EssentialsCMDBack1(s: sender):
	load "plugins/Essentials/players/%{_s}%/who.yml"
	yaml value "back.location" from "who" doesn't exist:
		load "plugins/Essentials/config.yml"
		yaml value "language" from "config" = "English":
			send "&4| &8x &cYou do not have location of back point." to {_s}
	else:
		{_s} has permission "essentials.back.bypass" or "essentials.back.*" or "essentials.*":
			teleport {_s} to yaml value "back.location" from "who"
			set yaml value "back.stats" from "who" to false
			delete yaml value "back.location" from "who"
			load "plugins/Essentials/config.yml"
			yaml value "language" from "config" = "English":
				send "&7You have been teleported at location of back point." to {_s}
			save yaml "who"
			unload yaml "who"
			stop
		else:
			send "&7You have waiting &6%yaml value "back.cooldown-teleport" from "config"% &7seconds for teleport of location of back point." to {_s}
			wait ("%yaml value "back.cooldown-teleport" from "config"% seconds" parsed as timespan)
			teleport {_s} to yaml value "back.location" from "who"
			set yaml value "back.stats" from "who" to false
			delete yaml value "back.location" from "who"
			yaml value "language" from "config" = "English":
				send "&7You have been teleported at location of back point." to {_s}
			save yaml "who"
			unload yaml "who"
			stop

function EssentialsCMDBack2(s: sender, p: offline player):
	load "plugins/Essentials/players/%{_p}%/who.yml"
	yaml value "back.location" from "who" doesn't exist:
		load "plugins/Essentials/config.yml"
		yaml value "language" from "config" = "English":
			send "&4| &8x &cYou do not have location of back point for the player &6%{_p}%&c." to {_s}
	else:
		{_s} has permission "essentials.back.others" or "essentials.back.*" or "essentials.*":
			teleport {_p} to yaml value "back.location" from "who"
			send "&7You have teleported the player &6%{_p}% &7at the location of back point." to {_s}
			set yaml value "back.stats" from "who" to false
			delete yaml value "back.location" from "who"
			yaml value "language" from "config" = "English":
				send "&7You have been teleported at location of back point." to {_s}
			save yaml "who"
			unload yaml "who"
			stop
		else:
			EssentialsNoPermission({_s})

function EssentialsCMDSpawn1(s: sender):
	load "plugins/Essentials/config.yml"
	yaml value "spawn.stats" from "config" = false:
		yaml value "language" from "config" = "English":
			send "&4| &8x &cThe spawn point has not exist." to {_s}
	else:
		{_s} has permission "essentials.spawn.bypass" or "essentials.spawn.*" or "essentials.*":
			teleport {_s} to yaml value "spawn.location" from "config"
			yaml value "language" from "config" = "English":
				send "&7You have teleported at the location of spawn point." to {_s}
		else:
			yaml value "language" from "config" = "English":
				send "&7You have waiting &6%yaml value "spawn.cooldown-teleport" from "config"% &7seconds for teleport of location of spawn point." to {_s}
			wait ("%yaml value "spawn.cooldown-teleport" from "config"% seconds" parsed as timespan)
			teleport {_s} to yaml value "spawn.location" from "config"
			yaml value "language" from "config" = "English":
				send "&7You have teleported at the location of spawn point." to {_s}

function EssentialsCMDSpawn2(s: sender, p: offline player):
	load "plugins/Essentials/config.yml"
	yaml value "spawn.location" from "config" doesn't exist:
		load "plugins/Essentials/config.yml"
		yaml value "language" from "config" = "English":
			send "&4| &8x &cThe spawn point has not exist." to {_s}
	else:
		{_s} has permission "essentials.spawn.others" or "essentials.spawn.*" or "essentials.*":
			teleport {_p} to yaml value "spawn.location" from "config"
			load "plugins/Essentials/config.yml"
			yaml value "language" from "config" = "English":
				send "&7You have teleported the player &6%{_p}% &7at the location of spawn point." to {_s}
		else:
			EssentialsNoPermission({_s})

function EssentialsCMDBan(s: sender, p: offline player, r: text):
	load "plugins/Essentials/players/%{_p}%/who.yml"
	yaml value "firstjoin.stats" from "who" doesn't exist:
		send "&4| &8x &cThe player &6%{_p}% &chas been unregister in this server." to {_s}
	else:
		yaml value "ban.stats" from "who" = false:
			set yaml value "ban.stats" from "who" to true
			set yaml value "ban.type-ban" from "who" to "Ban"
			set yaml value "ban.date" from "who" to "%now%"
			set yaml value "ban.reason" from "who" to "%{_r}%"
			set yaml value "ban.author" from "who" to "%{_s}%"
			delete yaml value "ban.times" from "who"
			set {Essentials::banlist::%{_p}'s uuid%} to {_p}
			delete {Essentials::%{_p}'s uuid%::tempban::now}
			delete {Essentials::%{_p}'s uuid%::tempban::times}
			load "plugins/Essentials/config.yml"
			yaml value "language" from "config" = "English":
				send "&7You have banned temporary the player &6%{_p}% &7with for reason &6'%{_r}%'&7." to {_s}
			save yaml "who"
			unload yaml "who"
			stop
		else:
			send "&4| &8x &cThe player &6%{_p}% &chas been banned." to {_s}

function EssentialsCMDBanlist(s: sender):
	{Essentials::banlist::*} isn't set:
		send "&4| &8x &cNo player has been banned." to {_s}
	else:
		send "&6List all players is banned: &c%{Essentials::banlist::*}%" to {_s}

function EssentialsCMDTempban(s: sender, p: offline player, r: text, t: timespan):
	load "plugins/Essentials/players/%{_p}%/who.yml"
	yaml value "firstjoin.stats" from "who" doesn't exist:
		send "&4| &8x &cThe player &6%{_p}% &chas been unregister in this server." to {_s}
	else:
		yaml value "ban.stats" from "who" = false:
			set yaml value "ban.stats" from "who" to true
			set yaml value "ban.type-ban" from "who" to "Tempban"
			set yaml value "ban.date" from "who" to "%now%"
			set yaml value "ban.reason" from "who" to "%{_r}%"
			set yaml value "ban.times" from "who" to "%{_t}%"
			set yaml value "ban.author" from "who" to "%{_s}%"
			set {Essentials::banlist::%{_p}'s uuid%} to {_p}
			set {Essentials::%{_p}'s uuid%::tempban::now} to now
			set {Essentials::%{_p}'s uuid%::tempban::times} to {_t}
			load "plugins/Essentials/config.yml"
			yaml value "language" from "config" = "English":
				send "&7You have banned temporary the player &6%{_p}% &7with for reason &6'%{_r}%'&7." to {_s}
			save yaml "who"
			unload yaml "who"
			stop
		else:
			send "&4| &8x &cThe player &6%{_p}% &chas been banned temporary." to {_s}

function EssentialsCMDUnban(s: sender, p: offline player):
	load "plugins/Essentials/players/%{_p}%/who.yml"
	yaml value "firstjoin.stats" from "who" doesn't exist:
		send "&4| &8x &cThe player &6%{_p}% &chas been unregister in this server." to {_s}
	else:
		yaml value "ban.stats" from "who" = true:
			set yaml value "ban.stats" from "who" to false
			delete yaml value "ban.type-ban" from "who"
			delete yaml value "ban.date" from "who"
			delete yaml value "ban.reason" from "who"
			delete yaml value "ban.times" from "who"
			delete yaml value "ban.author" from "who"
			delete {Essentials::banlist::%{_p}'s uuid%}
			delete {Essentials::%{_p}'s uuid%::tempban::now}
			delete {Essentials::%{_p}'s uuid%::tempban::times}
			load "plugins/Essentials/config.yml"
			yaml value "language" from "config" = "English":
				send "&7You have un-banned the player &6%{_p}%&7." to {_s}
			save yaml "who"
			unload yaml "who"
			stop
		else:
			send "&4| &8x &cThe player &6%{_p}% &chave not banned." to {_s}

on every 3 tick:
	load "plugins/Essentials/config.yml"
	yaml value "language" from "config" = "English":
		loop all players:
			load "plugins/Essentials/players/%loop-player%/who.yml"
			yaml value "ban.stats" from "who" = true:
				yaml value "ban.type-ban" from "who" = "Ban":
					kick loop-player due to "&cYou have been banned from the server.&f%nl%%nl%&7Reason: &c%yaml value "ban.reason" from "who"%&f%nl%&7Date: &c%yaml value "ban.date" from "who"%&f%nl%%nl%&6For more information on this, join the server's discord."
					stop
				yaml value "ban.type-ban" from "who" = "Tempban":
					difference between now and {Essentials::%loop-player's uuid%::tempban::now} is bigger than {Essentials::%loop-player's uuid%::tempban::times}:
						set yaml value "ban.stats" from "who" to false
						delete yaml value "ban.type-ban" from "who"
						delete yaml value "ban.date" from "who"
						delete yaml value "ban.reason" from "who"
						delete yaml value "ban.times" from "who"
						delete yaml value "ban.author" from "who"
						delete {Essentials::banlist::%loop-player's uuid%}
						delete {Essentials::%loop-player's uuid%::tempban::now}
						delete {Essentials::%loop-player's uuid%::tempban::times}
						save yaml "who"
						unload yaml "who"
						stop
					difference between now and {Essentials::%loop-player's uuid%::tempban::now} is smaller than {Essentials::%loop-player's uuid%::tempban::times}:
						kick loop-player due to "&cYou have been banned from the server.&f%nl%%nl%&7Reason: &c%yaml value "ban.reason" from "who"%&f%nl%&7Date: &c%yaml value "ban.date" from "who"%&f%nl%&7Times: &c%yaml value "ban.times" from "who"%&f%nl%%nl%&6For more information on this, join the server's discord."

function EssentialsCMDBedteleport1(s: sender):
	bed of {_s} exists:
		teleport {_s} to bed of {_s}
		load "plugins/Essentials/config.yml"
		yaml value "language" from "config" = "English":
			send "&7You have been teleported at location of bed&7." to {_s}
	else:
		yaml value "language" from "config" = "English":
			send "&4| &8x &cYou do not have bed." to {_s}
			
function EssentialsCMDBedteleport2(s: sender, p: offline player):
	{_s} has permission "essentials.bedteleport.others" or "essentials.*":
		bed of {_p} exists:
			teleport {_s} to bed of {_p}
			load "plugins/Essentials/config.yml"
			yaml value "language" from "config" = "English":
				send "&7You have been teleported at location of bed of the player &6%{_p}%&7." to {_s}
		else:
			yaml value "language" from "config" = "English":
				send "&4| &8x &cYou do not have bed of the player &6%{_p}%&c." to {_s}
	else:
		EssentialsNoPermission({_s})

function EssentialsCMDBroadcast(s: sender, w: text, t: text):
	({_w} parsed as world) is set:
		load "plugins/Essentials/config.yml"
		yaml value "language" from "config" = "English":
			{_s} has permission "essentials.broadcast.color" or "essentials.broadcast.*" or "essentials.*":
				broadcast "&7[&Announcement&7] &8x &f%colored {_t}%" to world "%{_w}%"
			else:
				broadcast "&7[&Announcement&7] &8x &f%{_t}%" to world "%{_w}%"
	else:
		load "plugins/Essentials/config.yml"
		yaml value "language" from "config" = "English":
			send "&4| &8x &cThe world &6%{_w}% &chave not exist." to {_s}

function EssentialsCMDChat(s: sender, syntaxetype: text):
	{_syntaxetype} = "Enable":
		{_s} has permission "essentials.chat.enable" or "essentials.chat.*" or "essentials.*":
			load "plugins/Essentials/config.yml"
			yaml value "chat.stats" from "config" = false:
				set yaml value "chat.stats" from "config" to true
				set yaml value "chat.date" from "config" to "%now%"
				set yaml value "chat.author" from "config" to "%{_s}%"
				yaml value "language" from "config" = "English":
					send "&7You have enabled the chat for all players&7." to {_s}
				save yaml "config"
				unload yaml "config"
				stop
			else:
				send "&4| &8x &cThe chat has been already enabled." to {_s}
				stop
		else:
			EssentialsNoPermission({_s})
	{_syntaxetype} = "Disable":
		{_s} has permission "essentials.chat.disable" or "essentials.chat.*" or "essentials.*":
			load "plugins/Essentials/config.yml"
			yaml value "chat.stats" from "config" = true:
				set yaml value "chat.stats" from "config" to false
				set yaml value "chat.date" from "config" to "%now%"
				set yaml value "chat.author" from "config" to "%{_s}%"
				yaml value "language" from "config" = "English":
					send "&7You have disabled the chat for all players&7." to {_s}
				save yaml "config"
				unload yaml "config"
				stop
			else:
				send "&4| &8x &cThe chat have not enabled." to {_s}
				stop
		else:
			EssentialsNoPermission({_s})
	{_syntaxetype} = "Toggle":
		{_s} has permission "essentials.chat.toggle" or "essentials.chat.*" or "essentials.*":
			load "plugins/Essentials/config.yml"
			yaml value "chat.stats" from "config" = false:
				set yaml value "chat.stats" from "config" to true
				set yaml value "chat.date" from "config" to "%now%"
				set yaml value "chat.author" from "config" to "%{_s}%"
				yaml value "language" from "config" = "English":
					send "&7You have enabled the chat for all players&7." to {_s}
			else:
				set yaml value "chat.stats" from "config" to false
				set yaml value "chat.date" from "config" to "%now%"
				set yaml value "chat.author" from "config" to "%{_s}%"
				yaml value "language" from "config" = "English":
					send "&7You have disable the chat for all players&7." to {_s}
			save yaml "config"
			unload yaml "config"
			stop
		else:
			EssentialsNoPermission({_s})
	{_syntaxetype} = "Clear":
		loop 100 times:
			broadcast "" to all worlds
		load "plugins/Essentials/config.yml"
		yaml value "language" from "config" = "English":
			broadcast "&6The chat has been clear by &c%{_s}%&6." to all worlds
	else:
		EssentialsNoPermission({_s})

function EssentialsCMDChunkSlime1(s: sender):
	chunk at {_s} is a slime chunk:
		load "plugins/Essentials/config.yml"
		yaml value "language" from "config" = "English":
			send "&7You have finded the chunk slime at your location&7." to {_s}
	else:
		load "plugins/Essentials/config.yml"
		yaml value "language" from "config" = "English":
			send "&7You have not finded the chunk slime at your location&7." to {_s}
			
function EssentialsCMDChunkSlime2(s: sender, p: offline player):
	{_s} has permission "essentials.chunkslime.others" or "essentials.*":
		chunk at {_p} is a slime chunk:
			load "plugins/Essentials/config.yml"
			yaml value "language" from "config" = "English":
				send "&7You have finded the chunk slime at location of the player &6%{_p}%&7." to {_s}
		else:
			load "plugins/Essentials/config.yml"
			yaml value "language" from "config" = "English":
				send "&7You have not finded the chunk slime at location of the player &6%{_p}%&7." to {_s}
	else:
		EssentialsNoPermission({_s})

function EssentialsCMDClearinventory1(s: sender):
	clear {_s}'s inventory
	load "plugins/Essentials/config.yml"
	yaml value "language" from "config" = "English":
		send "&7You have cleared your inventory." to {_s}
	stop
			
function EssentialsCMDClearinventory2(s: sender, p: offline player):
	{_s} has permission "essentials.clearinventory.others" or "essentials.*":
		clear {_p}'s inventory
		load "plugins/Essentials/config.yml"
		yaml value "language" from "config" = "English":
			send "&7You have cleared your inventory of the player &6%{_p}%&7." to {_s}
	else:
		EssentialsNoPermission({_s})

function EssentialsCMDCompass1(s: sender):
	load "plugins/Essentials/config.yml"
	yaml value "language" from "config" = "English":
		send "&7Orientation of &6%{_s}%&7: &c%{_s}'s facing% &7(&c%{_s}'s yaw% &cdegrees&7)&6." to {_s}
	stop
			
function EssentialsCMDCompass2(s: sender, p: offline player):
	{_s} has permission "essentials.compass.others" or "essentials.*":
		load "plugins/Essentials/config.yml"
		yaml value "language" from "config" = "English":
			send "&7Orientation of &6%{_p}%&7: &c%{_p}'s facing% &7(&c%{_p}'s yaw% &cdegrees&7)&6." to {_s}
	else:
		EssentialsNoPermission({_s})

function EssentialsCMDDeop(s: sender, p: offline player):
	{_p} = op:
		deop {_p}
		load "plugins/Essentials/config.yml"
		yaml value "language" from "config" = "English":
			send "&7You have deop the player &6%{_p}%&7." to {_s}
	else:
		load "plugins/Essentials/config.yml"
		yaml value "language" from "config" = "English":
			send "&4| &8x &cThe player &6%{_p}% &chave not op." to {_s}

function EssentialsCMDOp(s: sender, p: offline player):
	{_p} = op:
		load "plugins/Essentials/config.yml"
		yaml value "language" from "config" = "English":
			send "&4| &8x &cThe player &6%{_p}% &chas already op." to {_s}
	else:
		op {_p}
		load "plugins/Essentials/config.yml"
		yaml value "language" from "config" = "English":
			send "&7You have op the player &6%{_p}%&7." to {_s}

function EssentialsCMDThor(s: sender):
	strike lightning at the targeted block of {_s}
	load "plugins/Essentials/config.yml"
	yaml value "language" from "config" = "English":
		send "&7You have strike lightning." to {_s}
	stop

function EssentialsCMDTps(s: sender):
	load "plugins/Essentials/config.yml"
	yaml value "language" from "config" = "English":
		send "&6TPS of the server: &c%tps%" to {_s}
	stop

function EssentialsCMDWorkbench1(s: sender):
	open workbench inventory to {_s}
	load "plugins/Essentials/config.yml"
	yaml value "language" from "config" = "English":
		send "&7You have opened the workbench." to {_s}
	stop

function EssentialsCMDWorkbench2(s: sender, p: offline player):
	{_s} has permission "essentials.workbench.others" or "essentials.*":
		open workbench inventory to {_p}
		load "plugins/Essentials/config.yml"
		yaml value "language" from "config" = "English":
			send "&7You have opened the workbench to the player &6%{_p}%&7." to {_s}
	else:
		EssentialsNoPermission({_s})

function EssentialsCMDStop(s: sender):
	kick all players because "&cYou have been kicked from the server.&f%nl%%nl%&7Reason: &cThe server is stopped&f%nl%&7Date: &c%now% &f%nl%%nl%&6For more information on this, join the server's discord."
	wait 2 tick
	stop server

function EssentialsCMDGetpos1(s: sender):
	load "plugins/Essentials/config.yml"
	yaml value "language" from "config" = "English":
		send "&6Your location: &7x: &c%x-location of {_s}% &8- &7y: &c%y-location of {_s}% &8- &7z: &c%z-location of {_s}%" to {_s}
	stop

function EssentialsCMDGetpos2(s: sender, p: offline player):
	{_s} has permission "essentials.getpos.others" or "essentials.*":
		load "plugins/Essentials/config.yml"
		yaml value "language" from "config" = "English":
			send "&6Location of the player &c%{_p}%&6: &7x: &c%x-location of {_p}% &8- &7y: &c%y-location of {_p}% &8- &7z: &c%z-location of {_p}%" to {_s}
	else:
		EssentialsNoPermission({_s})

function EssentialsCMDHelpop(s: sender, t: text):
	{_s} has permission "essentials.helpop.color" or "essentials.*":
		loop all players:
			loop-players has permission "essentials.helpop.receive" or "essentials.*":
				load "plugins/Essentials/config.yml"
				yaml value "language" from "config" = "English":
					send "&7[&bHELPOP&7] &8x &7%{_s}%&7: &f%colored {_t}%" to loop-player
	else:
		loop all players:
			loop-players has permission "essentials.helpop.receive" or "essentials.*":
				load "plugins/Essentials/config.yml"
				yaml value "language" from "config" = "English":
					send "&7[&bHELPOP&7] &8x &7%{_s}%&7: &f%{_t}%" to loop-player

function EssentialsCMDGive(s: sender, itemtype: text, n: number):
	set {_Essentials::give::itemtype::%{_s}'s uuid%} to {_itemtype}
	set {_Essentials::give::itemnumber::%{_s}'s uuid%} to {_n}
	replace all "_" with " " in {_Essentials::give::itemtype::%{_s}'s uuid%}
	set {_Essentials::give::itemtype::%{_s}'s uuid%} to "%{_Essentials::give::itemtype::%{_s}'s uuid%}%" parsed as item
	wait 1 tick
	{_Essentials::give::itemtype::%{_s}'s uuid%} is an item:
		{_s} has permission "essentials.give.%{_itemtype}%" or "essentials.give.*" or "essentials.*":
			give {_Essentials::give::itemnumber::%{_s}'s uuid%} of {_Essentials::give::itemtype::%{_s}'s uuid%} to {_s}
			send "&7You have gived the item &c%{_n}% &7of &c%{_itemtype}%&7." to {_s}
		else:
			EssentialsNoPermission({_s})
	else:
		send "&4| &8x &cThe item &6%{_itemtype}% &ccannot exist or cannot be given. " to {_s}

function EssentialsCMDSeed1(s: sender):
	load "plugins/Essentials/config.yml"
	yaml value "language" from "config" = "English":
		send "&6Seed of the world &7%{_s}'s world%&6: &c%seed of {_s}'s world%" to {_s}

function EssentialsCMDSeed2(s: sender, w: text):
	({_w} parsed as world) is set:
		load "plugins/Essentials/config.yml"
		yaml value "language" from "config" = "English":
			{_s} has permission "essentials.seed.%{_w}%" or "essentials.seed.*" or "essentials.*":
				send "&6Seed of the world &7%{_w}%&6: &c%seed of {_w} parsed as world%" to {_s}
			else:
				EssentialsNoPermission({_s})
	else:
		load "plugins/Essentials/config.yml"
		yaml value "language" from "config" = "English":
			send "&4| &8x &cThe world &6%{_w}% &chave not exist." to {_s}

function EssentialsCMDSkull(s: sender, skulltype: offline player):
	{_s} has permission "essentials.skull.%{_skulltype}%" or "essentials.skull.*" or "essentials.*":
		give skull of {_skulltype} to {_s}
		send "&7You have give the head of the player &c%{_skulltype}%&7." to {_s}
	else:
		EssentialsNoPermission({_s})

function EssentialsCMDEnderchest1(s: sender):
	open the ender chest of {_s} for {_s}
	load "plugins/Essentials/config.yml"
	yaml value "language" from "config" = "English":
		send "&7You have opened your enderchest." to {_s}
	stop

function EssentialsCMDEnderchest2(s: sender, p: offline player):
	{_s} has permission "essentials.workbench.others" or "essentials.*":
		open the ender chest of {_p} for {_s}
		load "plugins/Essentials/config.yml"
		yaml value "language" from "config" = "English":
			send "&7You have opened the enderchest to the player &6%{_p}%&7." to {_s}
	else:
		EssentialsNoPermission({_s})

function EssentialsCMDSlap(s: sender, p: offline player):
	push {_p} backwards at speed 1
	load "plugins/Essentials/config.yml"
	yaml value "language" from "config" = "English":
		send "&7You have slapped the player &6%{_p}%&7." to {_s}
	stop

function EssentialsCMDJump1(s: sender):
	target block of {_s} is set:
		teleport {_s} to target block of {_s}
		load "plugins/Essentials/config.yml"
		yaml value "language" from "config" = "English":
			send "&7You have been teleported at location of your target block&7." to {_s}
	else:
		send "&4| &8x &cThe location of your target block is not exist." to {_s}
	
function EssentialsCMDJump2(s: sender, p: offline player):
	{_s} has permission "essentials.jump.others" or "essentials.*":
		target block of {_s} is set:
			teleport {_p} to target block of {_s}
			load "plugins/Essentials/config.yml"
			yaml value "language" from "config" = "English":
				send "&7You have teleported at location of your target block of the player &6%{_p}%&7." to {_s}
		else:
			send "&4| &8x &cThe location of your target block is not exist." to {_s}
	else:
		EssentialsNoPermission({_s})

function EssentialsCMDList(s: sender):
	load "plugins/Essentials/config.yml"
	yaml value "language" from "config" = "English":
		send "&6List of all players connected of this server&6: &c%all players%" to {_s}

function EssentialsCMDFireball1(s: sender):
	shoot a fireball from {_s}
	load "plugins/Essentials/config.yml"
	yaml value "language" from "config" = "English":
		send "&7You have shooted a fireball at your location." to {_s}
	stop
	
function EssentialsCMDFireball2(s: sender, p: offline player):
	{_s} has permission "essentials.fireball.others" or "essentials.*":
		shoot a fireball from {_p}
		load "plugins/Essentials/config.yml"
		yaml value "language" from "config" = "English":
			send "&7You have shooted a fireball at location of the player &6%{_p}%&7." to {_s}
	else:
		EssentialsNoPermission({_s})

function EssentialsCMDMe(s: sender, t: text):
	{_s} has permission "essentials.*" or "essentials.me.color":
		load "plugins/Essentials/config.yml"
		yaml value "language" from "config" = "English":
			send "&c* &7%{_s}%&7: &f%colored {_t}%" to all players
	else:
		load "plugins/Essentials/config.yml"
		yaml value "language" from "config" = "English":
			send "&c* &7%{_s}%&7: &f%{_t}%" to all players

function EssentialsCMDInvsee(s: sender, p: offline player):
	open {_p}'s inventory to {_s}
	load "plugins/Essentials/config.yml"
	yaml value "language" from "config" = "English":
		send "&7You have opened inventory of the player &6%{_p}%&7." to {_s}
	stop

function EssentialsCMDItemdb1(s: sender):
	load "plugins/Essentials/config.yml"
	yaml value "language" from "config" = "English":
		send "" to {_s}
		send "&8| &8x &6Informations:" to {_s}
		send "" to {_s}
		send "&8| &fName of item: &c%{_s}'s tool%" to {_s}
		send "&8| &fDurability of item: &c%durability of {_s}'s tool%&7/&c%max durability of {_s}'s tool%" to {_s}
		send "" to {_s}

function EssentialsCMDItemdb2(s: sender, p: offline player):
	{_s} has permission "essentials.itemdb.others" or "essentials.*":
		load "plugins/Essentials/config.yml"
		yaml value "language" from "config" = "English":
			send "" to {_s}
			send "&8| &8x &6Informations:" to {_s}
			send "" to {_s}
			send "&8| &fName of player: &c%{_p}%" to {_s}
			send "&8| &fName of item: &c%{_p}'s tool%" to {_s}
			send "&8| &fDurability of item: &c%durability of {_p}'s tool%&7/&c%max durability of {_p}'s tool%" to {_s}
			send "" to {_s}
	else:
		EssentialsNoPermission({_s})

function EssentialsCMDRepair(s: sender, repairtype: text):
	{_repairtype} = "ONE":
		{_s}'s tool = air:
			load "plugins/Essentials/config.yml"
			yaml value "language" from "config" = "English":
				send "&4| &8x &cYou cannot repair air." to {_s}
		else:
			repair {_s}'s tool
			load "plugins/Essentials/config.yml"
			yaml value "language" from "config" = "English":
				send "&7You have repaired your tool." to {_s}
	{_repairtype} = "ALL":
		set {_Essentials::repairall::count} to 0
		repair slot 0 of {_s}
		repair helmet slot of {_s}		
		repair chestplate slot of {_s}
		repair leggings slot of {_s}
		repair boots slot of {_s}
		loop 110 times:
			add 1 to {_Essentials::repairall::count}
			repair slot {_Essentials::repairall::count} of {_s}
		load "plugins/Essentials/config.yml"
		yaml value "language" from "config" = "English":
			send "&7You have repair your all tools." to {_s}

function EssentialsCMDWeather(s: sender, weathertype: text):
	{_weathertype} = "CLEAR":
		set weather of {_s}'s world to sunny
		load "plugins/Essentials/config.yml"
		yaml value "language" from "config" = "English":
			send "&7You have clear weather of the world &6%{_s}'s world%&7." to {_s}
	{_weathertype} = "SUN":
		set weather of {_s}'s world to sunny
		load "plugins/Essentials/config.yml"
		yaml value "language" from "config" = "English":
			send "&7You have set weather to sun of the world &6%{_s}'s world%&7." to {_s}
	{_weathertype} = "RAIN":
		set weather of {_s}'s world to rain
		load "plugins/Essentials/config.yml"
		yaml value "language" from "config" = "English":
			send "&7You have set weather to rain of the world &6%{_s}'s world%&7." to {_s}
	{_weathertype} = "THUNDER":
		set weather of {_s}'s world to thunder
		load "plugins/Essentials/config.yml"
		yaml value "language" from "config" = "English":
			send "&7You have set weather to thunder of the world &6%{_s}'s world%&7." to {_s}

function EssentialsCMDDepth1(s: sender):
	load "plugins/Essentials/config.yml"
	yaml value "language" from "config" = "English":
		send "&7You are &c%altitude of {_s}% &7above the bedrock." to {_s}

function EssentialsCMDDepth2(s: sender, p: offline player):
	{_s} has permission "essentials.depth.others" or "essentials.*":
		load "plugins/Essentials/config.yml"
		yaml value "language" from "config" = "English":
			send "&7The player &c%{_p}% &7is &c%altitude of {_p}% &7above the bedrock." to {_s}
	else:
		EssentialsNoPermission({_s})

function EssentialsCMDExtinguish1(s: sender):
	set {_s} on fire for 0 seconds
	load "plugins/Essentials/config.yml"
	yaml value "language" from "config" = "English":
		send "&7You are no longer on fire." to {_s}

function EssentialsCMDExtinguish2(s: sender, p: offline player):
	{_s} has permission "essentials.extinguish.others" or "essentials.*":
		set {_p} on fire for 0 seconds
		load "plugins/Essentials/config.yml"
		yaml value "language" from "config" = "English":
			send "&7The player &c%{_p}% &7is no longer on fire." to {_s}
	else:
		EssentialsNoPermission({_s})

function EssentialsCMDUnenchant1(s: sender):
	{_s}'s tool != air:
		{_s}'s tool is enchanted:
			disenchant {_s}'s tool
			load "plugins/Essentials/config.yml"
			yaml value "language" from "config" = "English":
				send "&7You have disenchant your tool." to {_s}
		else:
			load "plugins/Essentials/config.yml"
			yaml value "language" from "config" = "English":
				send "&4| &8x &cThis item is not enchanting." to {_s}
	else:
		load "plugins/Essentials/config.yml"
		yaml value "language" from "config" = "English":
			send "&4| &8x &cYou can not disenchant anything." to {_s}

function EssentialsCMDUnenchant2(s: sender, p: offline player):
	{_s} has permission "essentials.unenchant.others" or "essentials.*":	
		{_p}'s tool != air:
			{_p}'s tool is enchanted:
				disenchant {_p}'s tool
				load "plugins/Essentials/config.yml"
				yaml value "language" from "config" = "English":
					send "&7You have disenchant the tool of the player &6%{_p}%&7." to {_s}
			else:
				load "plugins/Essentials/config.yml"
				yaml value "language" from "config" = "English":
					send "&4| &8x &cThis item is not enchanting of the tool of the player &6%{_p}%&c." to {_s}
		else:
			load "plugins/Essentials/config.yml"
			yaml value "language" from "config" = "English":
				send "&4| &8x &cThe player &6%{_p}% &cis not disenchant anything." to {_s}
	else:
		EssentialsNoPermission({_s})

function EssentialsCMDSpeedFLY(s: sender, n: integer):
	set {_s}'s fly speed to {_n}/10
	load "plugins/Essentials/config.yml"
	yaml value "language" from "config" = "English":
		send "&7You have changed speed of fly to &6%{_n}%&7." to {_s}

function EssentialsCMDSpeedWALK(s: sender, n: integer):
	set {_s}'s walk speed to {_n}/10
	load "plugins/Essentials/config.yml"
	yaml value "language" from "config" = "English":
		send "&7You have changed speed of fly to &6%{_n}%&7." to {_s}

function EssentialsCMDSpeedCLEAR(s: sender):
	set {_s}'s walk speed to 0.2
	set {_s}'s fly speed to 0.1
	load "plugins/Essentials/config.yml"
	yaml value "language" from "config" = "English":
		send "&7You have changed speed of reset." to {_s}

function EssentialsCMDSetspawn(s: sender):
	load "plugins/Essentials/config.yml"
	yaml value "spawn.stats" from "config" = false:
		set yaml value "spawn.stats" from "config" to true
		set yaml value "spawn.location" from "config" to location of {_s}
		yaml value "language" from "config" = "English":
			send "&7You have created the spawn point at your location of the server." to {_s}
		save yaml "config"
		unload yaml "config"
		stop
	else:
		send "&4| &8x &cThe spawn point already exist" to {_s}

function EssentialsCMDDelspawn(s: sender):
	load "plugins/Essentials/config.yml"
	yaml value "spawn.stats" from "config" = true:
		set yaml value "spawn.stats" from "config" to false
		delete yaml value "spawn.location" from "config"
		yaml value "language" from "config" = "English":
			send "&7You have deleted the spawn point of the server." to {_s}
		save yaml "config"
		unload yaml "config"
		stop
	else:
		send "&4| &8x &cThe spawn point have not exist" to {_s}

function EssentialsCMDVanish1(s: sender):
	load "plugins/Essentials/players/%{_s}%/who.yml"
	yaml value "vanish.stats" from "who" = true:
		reveal {_p} from all players
		set yaml value "vanish.stats" from "who" to false
		load "plugins/Essentials/config.yml"
		yaml value "language" from "config" = "English":
			send "&7You have disable your vanish." to {_s}
		save yaml "who"
		unload yaml "who"
		stop
	else:
		hide {_s} from all players
		set yaml value "vanish.stats" from "who" to true
		load "plugins/Essentials/config.yml"
		yaml value "language" from "config" = "English":
			send "&7You have enabled your vanish." to {_s}
		save yaml "who"
		unload yaml "who"
		stop

function EssentialsCMDVanish2(s: sender, p: offline player):
	load "plugins/Essentials/players/%{_p}%/who.yml"
	{_s} has permission "essentials.vanish.others" or "essentials.*":
		yaml value "vanish.stats" from "who" = true:
			reveal {_p} from all players
			set yaml value "vanish.stats" from "who" to false
			load "plugins/Essentials/config.yml"
			yaml value "language" from "config" = "English":
				send "&7The player &c%{_p}% &7is no longer in vanish." to {_s}
			save yaml "who"
			unload yaml "who"
			stop
		else:
			hide {_p} from all players
			set yaml value "vanish.stats" from "who" to true
			load "plugins/Essentials/config.yml"
			yaml value "language" from "config" = "English":
				send "&7The player &c%{_p}% &7is vanish." to {_s}
			save yaml "who"
			unload yaml "who"
			stop
	else:
		EssentialsNoPermission({_s})

function EssentialsCMDMsg(s: sender, p: offline player, m: text):
	{_p} = "%{_s}%":
		send "&4| &8x &cYou cannot your send message yourself." to {_s}
	else:
		{_s} has permission "essentials.msg.color" or "essentials.*":
			load "plugins/Essentials/config.yml"
			yaml value "language" from "config" = "English":
				send "&7[&c%{_s}% &7» %{_p}%]&6: &7%coloured {_m}%" to {_s}
				send "&7[&c%{_s}% &7» %{_p}%]&6: &7%coloured {_m}%" to {_p}
		else:
			load "plugins/Essentials/config.yml"
			yaml value "language" from "config" = "English":
				send "&7[&c%{_s}% &7» %{_p}%]&6: &7%{_m}%" to {_s}
				send "&7[&c%{_s}% &7» %{_p}%]&6: &7%{_m}%" to {_p}

function EssentialsCMDMaintenance(s: sender, maintenancetype: text):	
	{_maintenancetype} = "ENABLE":
		load "plugins/Essentials/config.yml"
		yaml value "maintenance.stats" from "config" = false:
			set yaml value "maintenance.stats" from "config" to true
			set yaml value "maintenance.date" from "config" to "%now%"
			yaml value "language" from "config" = "English":
				send "&7You have enabled the maintenance of this servers." to {_s}
			save yaml "config"
			unload yaml "config"
			stop
		else:
			yaml value "language" from "config" = "English":
				send "&4| &8x &cThe maintenance has been already enabled of this server." to {_s}
	{_maintenancetype} = "DISABLE":
		load "plugins/Essentials/config.yml"
		yaml value "maintenance.stats" from "config" = false:
			yaml value "language" from "config" = "English":
				send "&4| &8x &cThe maintenance has not enabled." to {_s}
		else:
			set yaml value "maintenance.stats" from "config" to false
			set yaml value "maintenance.date" from "config" to "%now%"
			yaml value "language" from "config" = "English":
				send "&7You have disable the maintenance of this servers." to {_s}
			save yaml "config"
			unload yaml "config"
			stop
	{_maintenancetype} = "TOGGLE":
		load "plugins/Essentials/config.yml"
		yaml value "maintenance.stats" from "config" = false:
			set yaml value "maintenance.stats" from "config" to true
			set yaml value "maintenance.date" from "config" to "%now%"
			yaml value "language" from "config" = "English":
				send "&7You have enabled the maintenance of this servers." to {_s}
			save yaml "config"
			unload yaml "config"
			stop
		else:
			set yaml value "maintenance.stats" from "config" to false
			set yaml value "maintenance.date" from "config" to "%now%"
			yaml value "language" from "config" = "English":
				send "&7You have disable the maintenance of this servers." to {_s}
			save yaml "config"
			unload yaml "config"
			stop

function EssentialsCMDKickall(s: sender, t: text):
	load "plugins/Essentials/config.yml"
	yaml value "language" from "config" = "English":
		kick all players because "&cYou have been kicked from the server.&f%nl%%nl%&7Reason: &c%{_t}%&f%nl%&7Date: &c%now% &f%nl%%nl%&6For more information on this, join the server's discord."

function EssentialsCMDKick(s: sender, p: offline player, t: text):
	load "plugins/Essentials/config.yml"
	yaml value "language" from "config" = "English":
		kick {_p} because "&cYou have been kicked from the server.&f%nl%%nl%&7Reason: &c%{_t}%&f%nl%&7Date: &c%now% &f%nl%%nl%&6For more information on this, join the server's discord."

function EssentialsCMDKill(s: sender, p: offline player):
	kill {_p}
	stop

function EssentialsCMDSuicide(s: sender):
	kill {_s}
	stop

function EssentialsCMDHeal1(s: sender):
	load "plugins/Essentials/config.yml"
	{_s} has permission "essentials.heal.bypass" or "essentials.*":
		feed {_p}
		yaml value "language" from "config" = "English":
			send "&7You have healing." to {_s}
	else:
		send "&7You have waiting &6%yaml value "heal.cooldown-use" from "config"% &7seconds for heal." to {_s}
		wait ("%yaml value "heal.cooldown-use" from "config"% seconds" parsed as timespan)
		feed {_p}
		yaml value "language" from "config" = "English":
			send "&7You have healing." to {_s}

function EssentialsCMDHeal2(s: sender, p: offline player):
	heal {_p}
	load "plugins/Essentials/config.yml"
	yaml value "language" from "config" = "English":
		send "&7You have healing the player &6%{_p}%&7." to {_s}

function EssentialsCMDFeed1(s: sender):
	load "plugins/Essentials/config.yml"
	{_s} has permission "essentials.heal.bypass" or "essentials.*":
		feed {_p}
		yaml value "language" from "config" = "English":
			send "&7You have feeding." to {_s}
	else:
		send "&7You have waiting &6%yaml value "feed.cooldown-use" from "config"% &7seconds for feed." to {_s}
		wait ("%yaml value "feed.cooldown-use" from "config"% seconds" parsed as timespan)
		feed {_p}
		yaml value "language" from "config" = "English":
			send "&7You have feeding." to {_s}

function EssentialsCMDFeed2(s: sender, p: offline player):
	feed {_p}
	load "plugins/Essentials/config.yml"
	yaml value "language" from "config" = "English":
		send "&7You have feeding the player &6%{_p}%&7." to {_s}

function EssentialsCMDGamemode1(s: sender, gamemodetype: text):
	{_gamemodetype} = "SURVIVAL":
		{_s} has permission "essentials.gamemode.survival" or "essentials.gamemode.*" or "essentials.*":
			gamemode of {_s} != survival:
				set gamemode of {_s} to survival
				delete {Essentials::%{_s}'s uuid%::godmode}
				load "plugins/Essentials/config.yml"
				yaml value "language" from "config" = "English":
					send "&7You have changed your gamemode." to {_s}
			else:
				load "plugins/Essentials/config.yml"
				yaml value "language" from "config" = "English":
					send "&4| &8x &cYou have already this gamemode." to {_s}
		else:
			EssentialsNoPermission({_s})
	{_gamemodetype} = "CREATIVE":
		{_s} has permission "essentials.gamemode.creative" or "essentials.gamemode.*" or "essentials.*":
			gamemode of {_s} != creative:
				set gamemode of {_s} to creative
				set {Essentials::%{_s}'s uuid%::godmode} to true
				load "plugins/Essentials/config.yml"
				yaml value "language" from "config" = "English":
					send "&7You have changed your gamemode." to {_s}
			else:
				load "plugins/Essentials/config.yml"
				yaml value "language" from "config" = "English":
					send "&4| &8x &cYou have already this gamemode." to {_s}
		else:
			EssentialsNoPermission({_s})
	{_gamemodetype} = "ADVENTURE":
		{_s} has permission "essentials.gamemode.adventure" or "essentials.gamemode.*" or "essentials.*":
			gamemode of {_s} != adventure:
				set gamemode of {_s} to adventure
				delete {Essentials::%{_s}'s uuid%::godmode}
				load "plugins/Essentials/config.yml"
				yaml value "language" from "config" = "English":
					send "&7You have changed your gamemode." to {_s}
			else:
				load "plugins/Essentials/config.yml"
				yaml value "language" from "config" = "English":
					send "&4| &8x &cYou have already this gamemode." to {_s}
		else:
			EssentialsNoPermission({_s})
	{_gamemodetype} = "SPECTATOR":
		{_s} has permission "essentials.gamemode.spectator" or "essentials.gamemode.*" or "essentials.*":
			gamemode of {_s} != spectator:
				set gamemode of {_s} to spectator
				set {Essentials::%{_s}'s uuid%::godmode} to true
				load "plugins/Essentials/config.yml"
				yaml value "language" from "config" = "English":
					send "&7You have changed your gamemode." to {_s}
			else:
				load "plugins/Essentials/config.yml"
				yaml value "language" from "config" = "English":
					send "&4| &8x &cYou have already this gamemode." to {_s}
		else:
			EssentialsNoPermission({_s})

function EssentialsCMDGamemode2(s: sender, gamemodetype: text, p: offline player):
	{_gamemodetype} = "SURVIVAL":
		{_s} has permission "essentials.gamemode.others.survival" or "essentials.gamemode.others.*" or "essentials.gamemode.*" or "essentials.*":
			gamemode of {_p} != survival:
				set gamemode of {_p} to survival
				delete {Essentials::%{_p}'s uuid%::godmode}
				load "plugins/Essentials/config.yml"
				yaml value "language" from "config" = "English":
					send "&7You have changed the gamemode of the player &6%{_p}%&7." to {_s}
			else:
				load "plugins/Essentials/config.yml"
				yaml value "language" from "config" = "English":
					send "&4| &8x &cThe player &6%{_p}% &chas already this gamemode." to {_s}
		else:
			EssentialsNoPermission({_s})
	{_gamemodetype} = "CREATIVE":
		{_s} has permission "essentials.gamemode.others.creative" or "essentials.gamemode.others.*" or "essentials.gamemode.*" or "essentials.*":
			gamemode of {_p} != creative:
				set gamemode of {_p} to creative
				set {Essentials::%{_p}'s uuid%::godmode} to true
				load "plugins/Essentials/config.yml"
				yaml value "language" from "config" = "English":
					send "&7You have changed the gamemode of the player &6%{_p}%&7." to {_s}
			else:
				load "plugins/Essentials/config.yml"
				yaml value "language" from "config" = "English":
					send "&4| &8x &cThe player &6%{_p}% &chas already this gamemode." to {_s}
		else:
			EssentialsNoPermission({_s})
	{_gamemodetype} = "ADVENTURE":
		{_s} has permission "essentials.gamemode.others.adventure" or "essentials.gamemode.others.*" or "essentials.gamemode.*" or "essentials.*":
			gamemode of {_p} != adventure:
				set gamemode of {_p} to adventure
				delete {Essentials::%{_p}'s uuid%::godmode}
				load "plugins/Essentials/config.yml"
				yaml value "language" from "config" = "English":
					send "&7You have changed the gamemode of the player &6%{_p}%&7." to {_s}
			else:
				load "plugins/Essentials/config.yml"
				yaml value "language" from "config" = "English":
					send "&4| &8x &cThe player &6%{_p}% &chas already this gamemode." to {_s}
		else:
			EssentialsNoPermission({_s})
	{_gamemodetype} = "SPECTATOR":
		{_s} has permission "essentials.gamemode.others.spectator" or "essentials.gamemode.others.*" or "essentials.gamemode.*" or "essentials.*":
			gamemode of {_p} != spectator:
				set gamemode of {_p} to spectator
				set {Essentials::%{_p}'s uuid%::godmode} to true
				load "plugins/Essentials/config.yml"
				yaml value "language" from "config" = "English":
					send "&7You have changed the gamemode of the player &6%{_p}%&7." to {_s}
			else:
				load "plugins/Essentials/config.yml"
				yaml value "language" from "config" = "English":
					send "&4| &8x &cThe player &6%{_p}% &chas already this gamemode." to {_s}
		else:
			EssentialsNoPermission({_s})

function EssentialsCMDMute(s: sender, p: offline player, r: text):
	load "plugins/Essentials/players/%{_p}%/who.yml"
	yaml value "firstjoin.stats" from "who" doesn't exist:
		send "&4| &8x &cThe player &6%{_p}% &chas been unregister in this server." to {_s}
	else:
		yaml value "mute.stats" from "who" = false:
			set yaml value "mute.stats" from "who" to true
			set yaml value "mute.type-mute" from "who" to "Mute"
			set yaml value "mute.date" from "who" to "%now%"
			set yaml value "mute.reason" from "who" to "%{_r}%"
			set yaml value "mute.author" from "who" to "%{_s}%"
			delete yaml value "mute.times" from "who"
			set {Essentials::mutelist::%{_p}'s uuid%} to {_p}
			delete {Essentials::%{_p}'s uuid%::tempmute::now}
			delete {Essentials::%{_p}'s uuid%::tempmute::times}
			load "plugins/Essentials/config.yml"
			yaml value "language" from "config" = "English":
				send "&7You have muted temporary the player &6%{_p}% &7with for reason &6'%{_r}%'&7." to {_s}
			save yaml "who"
			unload yaml "who"
			stop
		else:
			send "&4| &8x &cThe player &6%{_p}% &chas been muted." to {_s}

function EssentialsCMDMutelist(s: sender):
	{Essentials::mutelist::*} isn't set:
		send "&4| &8x &cNo player has been muted." to {_s}
	else:
		send "&6List all players is muted: &c%{Essentials::mutelist::*}%" to {_s}

function EssentialsCMDTempmute(s: sender, p: offline player, r: text, t: timespan):
	load "plugins/Essentials/players/%{_p}%/who.yml"
	yaml value "firstjoin.stats" from "who" doesn't exist:
		send "&4| &8x &cThe player &6%{_p}% &chas been unregister in this server." to {_s}
	else:
		yaml value "mute.stats" from "who" = false:
			set yaml value "mute.stats" from "who" to true
			set yaml value "mute.type-mute" from "who" to "Tempmute"
			set yaml value "mute.date" from "who" to "%now%"
			set yaml value "mute.reason" from "who" to "%{_r}%"
			set yaml value "mute.times" from "who" to "%{_t}%"
			set yaml value "mute.author" from "who" to "%{_s}%"
			set {Essentials::mutelist::%{_p}'s uuid%} to {_p}
			set {Essentials::%{_p}'s uuid%::tempmute::now} to now
			set {Essentials::%{_p}'s uuid%::tempmute::times} to {_t}
			load "plugins/Essentials/config.yml"
			yaml value "language" from "config" = "English":
				send "&7You have muted temporary the player &6%{_p}% &7with for reason &6'%{_r}%'&7." to {_s}
			save yaml "who"
			unload yaml "who"
			stop
		else:
			send "&4| &8x &cThe player &6%{_p}% &chas been muted temporary." to {_s}

function EssentialsCMDUnmute(s: sender, p: offline player):
	load "plugins/Essentials/players/%{_p}%/who.yml"
	yaml value "firstjoin.stats" from "who" doesn't exist:
		send "&4| &8x &cThe player &6%{_p}% &chas been unregister in this server." to {_s}
	else:
		yaml value "mute.stats" from "who" = true:
			set yaml value "mute.stats" from "who" to false
			delete yaml value "mute.type-mute" from "who"
			delete yaml value "mute.date" from "who"
			delete yaml value "mute.reason" from "who"
			delete yaml value "mute.times" from "who"
			delete yaml value "mute.author" from "who"
			delete  {Essentials::mutelist::%{_p}'s uuid%}
			delete {Essentials::%{_p}'s uuid%::tempmute::now}
			delete {Essentials::%{_p}'s uuid%::tempmute::times}
			load "plugins/Essentials/config.yml"
			yaml value "language" from "config" = "English":
				send "&7You have un-muted the player &6%{_p}%&7." to {_s}
			save yaml "who"
			unload yaml "who"
			stop
		else:
			send "&4| &8x &cThe player &6%{_p}% &chave not muted." to {_s}

on every 3 tick:
	load "plugins/Essentials/config.yml"
	yaml value "language" from "config" = "English":
		loop all players:
			load "plugins/Essentials/players/%loop-player%/who.yml"
			yaml value "mute.stats" from "who" = true:
				yaml value "mute.type-mute" from "who" = "Tempmute":
					difference between now and {Essentials::%loop-player's uuid%::tempmute::now} is bigger than {Essentials::%loop-player's uuid%::tempmute::times}:
						set yaml value "mute.stats" from "who" to false
						delete yaml value "mute.type-mute" from "who"
						delete yaml value "mute.date" from "who"
						delete yaml value "mute.reason" from "who"
						delete yaml value "mute.times" from "who"
						delete yaml value "mute.author" from "who"
						delete  {Essentials::mutelist::%loop-player's uuid%}
						delete {Essentials::%loop-player's uuid%::tempmute::now}
						delete {Essentials::%loop-player's uuid%::tempmute::times}
						save yaml "who"
						unload yaml "who"
						stop

function EssentialsCMDFly1(s: sender):
	{_s}'s flight mode is false:
		set {_s}'s flight mode to true
		load "plugins/Essentials/config.yml"
		yaml value "language" from "config" = "English":
			send "&7You have enabled your fly mode." to {_s}
	else:
		set {_s}'s flight mode to false
		load "plugins/Essentials/config.yml"
		yaml value "language" from "config" = "English":
			send "&7You have disable your fly mode." to {_s}

function EssentialsCMDFly2(s: sender, p: offline player):
	{_s} has permission "essentials.fly.others" or "essentials.*":
		load "plugins/Essentials/config.yml"
		{_p}'s flight mode is false:
			set {_p}'s flight mode to true
			yaml value "language" from "config" = "English":
				send "&7You have enabled the fly mode of the player &6%{_p}%&7." to {_s}
		else:
			set {_p}'s flight mode to false
			yaml value "language" from "config" = "English":
				send "&7You have disable the fly mode of the player &6%{_p}%&7." to {_s}

function EssentialsCMDGod1(s: sender):
	{Essentials::%{_s}'s uuid%::godmode} = false:
		set {Essentials::%{_s}'s uuid%::godmode} to true
		load "plugins/Essentials/config.yml"
		yaml value "language" from "config" = "English":
			send "&7You have enabled your god mode." to {_s}
	else:
		set {Essentials::%{_s}'s uuid%::godmode} to false
		load "plugins/Essentials/config.yml"
		yaml value "language" from "config" = "English":
			send "&7You have disable your god mode." to {_s}

function EssentialsCMDGod2(s: sender, p: offline player):
	{_s} has permission "essentials.god.others" or "essentials.*":
		load "plugins/Essentials/config.yml"
		{Essentials::%{_p}'s uuid%::godmode} = false:
			set {Essentials::%{_p}'s uuid%::godmode} to true
			yaml value "language" from "config" = "English":
				send "&7You have enabled the god mode of the player &6%{_p}%&7." to {_s}
		else:
			set {Essentials::%{_p}'s uuid%::godmode} to false
			yaml value "language" from "config" = "English":
				send "&7You have disable the god mode of the player &6%{_p}%&7." to {_s}
	else:
		EssentialsNoPermission({_s})

function EssentialsCMDTime(s: sender, timetype: text):
	{_timetype} = "DAY":
		set time of {_s}'s world to 06:00
		load "plugins/Essentials/config.yml"
		yaml value "language" from "config" = "English":
			send "&7You have set the day of this server." to {_s}
	{_timetype} = "NIGHT":
		set time of {_s}'s world to 19:30
		load "plugins/Essentials/config.yml"
		yaml value "language" from "config" = "English":
			send "&7You have set the day of this server." to {_s}

function EssentialsCMDSethome(s: sender, t: text):
	{_t} = "Stats":
		load "plugins/Essentials/config.yml"
		yaml value "language" from "config" = "English":
			send "&4| &8x &cThe name of home has not use." to {_s}
	else:
		load "plugins/Essentials/players/%{_s}%/who.yml"
		yaml value "homes.%{_t}%" from "who" doesn't exist:
			set yaml value "homes.stats" from "who" to true
			set yaml value "homes.%{_t}%" from "who" to {_t}
			set yaml value "homes.%{_t}%.date" from "who" to "%now%"
			set yaml value "homes.%{_t}%.location" from "who" to location of {_s}
			set {Essentials::%{_s}'s uuid%::homes::%{_t}%} to {_t}
			load "plugins/Essentials/config.yml"
			yaml value "language" from "config" = "English":
				send "&7You have created the home &6%{_t}%&7." to {_s}
			save yaml "who"
			unload yaml "who"
			stop
		else:
			send "&4| &8x &cThe home &6%{_t}% &chas already created." to {_s}

function EssentialsCMDDelhome(s: sender, t: text):
	{_t} = "Stats":
		load "plugins/Essentials/config.yml"
		yaml value "language" from "config" = "English":
			send "&4| &8x &cThe name of home has not use." to {_s}
	else:
		load "plugins/Essentials/players/%{_s}%/who.yml"
		yaml value "homes.%{_t}%" from "who" doesn't exist:
			send "&4| &8x &cThe home &6%{_t}% &chas not exist." to {_s}
		else:
			delete yaml value "homes.%{_t}%" from "who"
			delete {Essentials::%{_s}'s uuid%::homes::%{_t}%}
			load "plugins/Essentials/config.yml"
			yaml value "language" from "config" = "English":
				send "&7You have deleted the home &6%{_t}%&7." to {_s}
			size of {Essentials::%{_s}'s uuid%::homes::*} = 0:
				set yaml value "homes.stats" from "who" to false
			save yaml "who"
			unload yaml "who"
			stop

function EssentialsCMDHomes(s: sender):
	{Essentials::%{_s}'s uuid%::homes::*} isn't set:
		load "plugins/Essentials/config.yml"
		yaml value "language" from "config" = "English":
			send "&4| &8x &cYou have not homes" to {_s}
	else:
		load "plugins/Essentials/config.yml"
		yaml value "language" from "config" = "English":
			send "&6List of all homes: &c%{Essentials::%{_s}'s uuid%::homes::*}%" to {_s}

function EssentialsCMDHome(s: sender, t: text):
	{_t} = "Stats":
		load "plugins/Essentials/config.yml"
		yaml value "language" from "config" = "English":
			send "&4| &8x &cThe name of home has not use." to {_s}
	else:
		load "plugins/Essentials/players/%{_s}%/who.yml"
		yaml value "homes.%{_t}%" from "who" doesn't exist:
			load "plugins/Essentials/config.yml"
			yaml value "language" from "config" = "English":
				send "&4| &8x &cThe home &6%{_t}% &chas not exist." to {_s}
		else:
			{_s} has permission "essentials.home.bypass" or "essentials.*":
				teleport {_s} to yaml value "homes.%{_t}%.location" from "who"
				load "plugins/Essentials/config.yml"
				yaml value "language" from "config" = "English":
					send "&7You have teleported at the location of home &6%{_t}%&7." to {_s}
			else:
				load "plugins/Essentials/config.yml"
				yaml value "language" from "config" = "English":
					send "&7You have waiting &6%yaml value "home.cooldown-teleport" from "config"% &7seconds for teleport of location of home &6%{_t}%&7." to {_s}
				wait ("%yaml value "home.cooldown-teleport" from "config"% seconds" parsed as timespan)
				teleport {_s} to yaml value "homes.%{_t}%.location" from "who"
				yaml value "language" from "config" = "English":
					send "&7You have teleported at the location of home &6%{_t}%&7." to {_s}

function EssentialsCMDFreeze(s: sender, p: offline player):
	{_s} has permission "essentials.fly.others" or "essentials.*":
		load "plugins/Essentials/players/%{_p}%/who.yml"
		yaml value "freeze.stats" from "who" = false:
			load "plugins/Essentials/config.yml"
			set yaml value "freeze.stats" from "who" to true
			set yaml value "freeze.date" from "who" to "%now%"
			set {Essentials::freezelist::%{_p}'s uuid%} to {_p}
			yaml value "language" from "config" = "English":
				send "&7You have enabled the freeze mode of the player &6%{_p}%&7." to {_s}
			save yaml "who"
			unload yaml "who"
			stop
		else:
			load "plugins/Essentials/config.yml"
			set yaml value "freeze.stats" from "who" to false
			set yaml value "freeze.date" from "who" to "%now%"
			delete {Essentials::freezelist::%{_p}'s uuid%}
			yaml value "language" from "config" = "English":
				send "&7You have disable the freeze mode of the player &6%{_p}%&7." to {_s}
			save yaml "who"
			unload yaml "who"
			stop

function EssentialsCMDSetkit(s: sender, t: text):
	{_t} = "Stats":
		load "plugins/Essentials/config.yml"
		yaml value "language" from "config" = "English":
			send "&4| &8x &cThe name of kit has not use." to {_s}
	else:
		load "plugins/Essentials/config.yml"
		yaml value "kits.%{_t}%" from "config" doesn't exist:
			set yaml value "kits.stats" from "config" to true
			set yaml value "kits.%{_t}%" from "config" to {_t}
			set yaml value "kits.%{_t}%.date" from "config" to "%now%"
			set {_Essentials::kit::count} to 0
			loop 41 times:
				set yaml value "kits.%{_t}%.slot-%{_Essentials::kit::count}%" from "config" to slot {_Essentials::kit::count} of {_s}'s inventory
				add 1 to {_Essentials::kit::count}
			set {Essentials::kits::%{_t}%} to {_t}
			yaml value "language" from "config" = "English":
				send "&7You have created the kit &6%{_t}%&7." to {_s}
			save yaml "config"
			unload yaml "config"
			stop
		else:
			send "&4| &8x &cThe kit &6%{_t}% &chas already created." to {_s}

function EssentialsCMDDelkit(s: sender, t: text):
	{_t} = "Stats":
		load "plugins/Essentials/config.yml"
		yaml value "language" from "config" = "English":
			send "&4| &8x &cThe name of kit has not use." to {_s}
	else:
		load "plugins/Essentials/config.yml"
		yaml value "kits.%{_t}%" from "config" doesn't exist:
			send "&4| &8x &cThe kit &6%{_t}% &chas not exist." to {_s}
		else:
			delete yaml value "kits.%{_t}%" from "config"
			delete {Essentials::kits::%{_t}%}
			yaml value "language" from "config" = "English":
				send "&7You have deleted the kit &6%{_t}%&7." to {_s}
			size of {Essentials::kits::*} = 0:
				set yaml value "kits.stats" from "config" to false
			save yaml "config"
			unload yaml "config"
			stop

function EssentialsCMDKits(s: sender):
	{Essentials::kits::*} isn't set:
		load "plugins/Essentials/config.yml"
		yaml value "language" from "config" = "English":
			send "&4| &8x &cYou have not kits" to {_s}
	else:
		load "plugins/Essentials/config.yml"
		yaml value "language" from "config" = "English":
			send "&6List of all kits: &c%{Essentials::kits::*}%" to {_s}

function EssentialsCMDKit(s: sender, t: text):
	{_t} = "Stats":
		load "plugins/Essentials/config.yml"
		yaml value "language" from "config" = "English":
			send "&4| &8x &cThe name of kit has not use." to {_s}
	else:
		yaml value "kits.%{_t}%" from "config" doesn't exist:
			load "plugins/Essentials/config.yml"
			yaml value "language" from "config" = "English":
				send "&4| &8x &cThe kit &6%{_t}% &chas not exist." to {_s}
		else:
			{_s} has permission "essentials.kit.bypass" or "essentials.*":
				load "plugins/Essentials/config.yml"
				set {_Essentials::kit::count} to 0
				loop 41 times:
					set slot {_Essentials::kit::count} of {_s}'s inventory to yaml value "kits.%{_t}%.slot-%{_Essentials::kit::count}%" from "config"
					add 1 to {_Essentials::kit::count}
				yaml value "language" from "config" = "English":
					send "&7You have gived the kit &6%{_t}%&7." to {_s}
			else:
				load "plugins/Essentials/config.yml"
				yaml value "language" from "config" = "English":
					send "&7You have waiting &6%yaml value "kit.cooldown-use" from "config"% &7seconds for give the kit &6%{_t}%&7." to {_s}
				wait ("%yaml value "kit.cooldown-use" from "config"% seconds" parsed as timespan)
				set {_Essentials::kit::count} to 0
				loop 41 times:
					set slot {_Essentials::kit::count} of {_s}'s inventory to yaml value "kits.%{_t}%.slot-%{_Essentials::kit::count}%" from "config"
					add 1 to {_Essentials::kit::count}
				yaml value "language" from "config" = "English":
					send "&7You have gived the kit &6%{_t}%&7." to {_s}

function EssentialsCMDSetwarp(s: sender, t: text):
	{_t} = "Stats":
		load "plugins/Essentials/config.yml"
		yaml value "language" from "config" = "English":
			send "&4| &8x &cThe name of warp has not use." to {_s}
	else:
		load "plugins/Essentials/config.yml"
		yaml value "warps.%{_t}%" from "config" doesn't exist:
			set yaml value "warps.stats" from "config" to true
			set yaml value "warps.%{_t}%" from "config" to {_t}
			set yaml value "warps.%{_t}%.date" from "config" to "%now%"
			set yaml value "warps.%{_t}%.location" from "config" to location of {_s}
			set {Essentials::warps::%{_t}%} to {_t}
			yaml value "language" from "config" = "English":
				send "&7You have created the warp &6%{_t}%&7." to {_s}
			save yaml "config"
			unload yaml "config"
			stop
		else:
			send "&4| &8x &cThe warp &6%{_t}% &chas already created." to {_s}

function EssentialsCMDDelwarp(s: sender, t: text):
	{_t} = "Stats":
		load "plugins/Essentials/config.yml"
		yaml value "language" from "config" = "English":
			send "&4| &8x &cThe name of warp has not use." to {_s}
	else:
		load "plugins/Essentials/config.yml"
		yaml value "warps.%{_t}%" from "config" doesn't exist:
			send "&4| &8x &cThe warp &6%{_t}% &chas not exist." to {_s}
		else:
			delete yaml value "warps.%{_t}%" from "config"
			delete {Essentials::warps::%{_t}%}
			yaml value "language" from "config" = "English":
				send "&7You have deleted the warp &6%{_t}%&7." to {_s}
			size of {Essentials::warps::*} = 0:
				set yaml value "warps.stats" from "config" to false
			save yaml "config"
			unload yaml "config"
			stop

function EssentialsCMDWarps(s: sender):
	{Essentials::warps::*} isn't set:
		load "plugins/Essentials/config.yml"
		yaml value "language" from "config" = "English":
			send "&4| &8x &cYou have not warps" to {_s}
	else:
		load "plugins/Essentials/config.yml"
		yaml value "language" from "config" = "English":
			send "&6List of all warps: &c%{Essentials::warps::*}%" to {_s}

function EssentialsCMDWarp(s: sender, t: text):
	{_t} = "Stats":
		load "plugins/Essentials/config.yml"
		yaml value "language" from "config" = "English":
			send "&4| &8x &cThe name of warp has not use." to {_s}
	else:
		yaml value "warps.%{_t}%" from "config" doesn't exist:
			load "plugins/Essentials/config.yml"
			yaml value "language" from "config" = "English":
				send "&4| &8x &cThe warp &6%{_t}% &chas not exist." to {_s}
		else:
			{_s} has permission "essentials.warp.bypass" or "essentials.*":
				teleport {_s} to yaml value "warps.%{_t}%.location" from "config"
				load "plugins/Essentials/config.yml"
				yaml value "language" from "config" = "English":
					send "&7You have teleported at location of the warp &6%{_t}%&7." to {_s}
			else:
				load "plugins/Essentials/config.yml"
				yaml value "language" from "config" = "English":
					send "&7You have waiting &6%yaml value "warp.cooldown-use" from "config"% &7seconds for teleport at location of the warp &6%{_t}%&7." to {_s}
				wait ("%yaml value "warp.cooldown-use" from "config"% seconds" parsed as timespan)
				teleport {_s} to yaml value "warps.%{_t}%.location" from "config"
				yaml value "language" from "config" = "English":
					send "&7You have teleported at location of the warp &6%{_t}%&7." to {_s}

function EssentialsCMDFreezelist(s: sender):
	{Essentials::freezelist::*} isn't set:
		load "plugins/Essentials/config.yml"
		yaml value "language" from "config" = "English":
			send "&4| &8x &cYou have not players freezed" to {_s}
	else:
		load "plugins/Essentials/config.yml"
		yaml value "language" from "config" = "English":
			send "&6List of all homes: &c%{Essentials::freezelist::*}%" to {_s}

function EssentialsCMDSeen(s: sender, p: offline player):
	load "plugins/Essentials/config.yml"
	yaml value "language" from "config" = "English":
		send "" to {_s}
		send "&8| &8x &6Informations:" to {_s}
		send "" to {_s}
		send "&8| &fName of player: &c%{_p}%" to {_s}
		send "&8| &fUUID of player: &c%{_p}'s uuid%" to {_s}
		send "&8| &fGamemode of player: &c%{_p}'s gamemode%" to {_s}
		send "&8| &fCoords of player: &7x: &c%x-location of {_p}% &8- &7y: &c%y-location of {_p}% &8- &7z: &c%z-location of {_p}%" to {_s}
		send "&8| &fWorld of player: &c%{_p}'s world%" to {_s}
		send "&8| &fPing of player: &c%{_p}'s ping%" to {_s}
		load "plugins/Essentials/players/%{_s}%/who.yml"
		yaml value "freeze.stats" from "who" = false:
			send "&8| &fFreeze mode: &cfalse" to {_s}
		else:
			send "&8| &fFreeze mode: &2True" to {_s}
		yaml value "vanish.stats" from "who" = false:
			send "&8| &fVanish mode: &cfalse" to {_s}
		else:
			send "&8| &fVanish mode: &2True" to {_s}
		yaml value "afk.stats" from "who" = false:
			send "&8| &fAFK mode: &cfalse" to {_s}
		else:
			send "&8| &fAFK mode: &2True" to {_s}
		yaml value "mute.stats" from "who" = false:
			send "&8| &fMute mode: &cfalse" to {_s}
		else:
			send "&8| &fMute mode: &2True" to {_s}
		yaml value "ban.stats" from "who" = false:
			send "&8| &fBan mode: &cfalse" to {_s}
		else:
			send "&8| &fBan mode: &2True" to {_s}
		send "" to {_s}

function EssentialsCMDTpall(s: sender):
	loop all players:
		load "plugins/Essentials/players/%loop-player%/who.yml"
		yaml value "back.stats" from "who" = false:
			set yaml value "back.stats" from "who" to true
			set yaml value "back.location" from "who" to location of loop-player
	save yaml "who"
	unload yaml "who"
	teleport all players to {_s}
	load "plugins/Essentials/config.yml"
	yaml value "language" from "config" = "English":
		broadcast "&7You have been teleported at location of the player &6%{_s}%&7." to all worlds

function EssentialsCMDTp(s: sender, p: offline player):
	load "plugins/Essentials/players/%{_s}%/who.yml"
	yaml value "back.stats" from "who" = false:
		set yaml value "back.stats" from "who" to true
		set yaml value "back.location" from "who" to location of {_s}
	teleport {_s} to {_p}
	load "plugins/Essentials/config.yml"
	yaml value "language" from "config" = "English":
		send "&7You have been teleported at location of the player &6%{_p}%&7." to {_s}

function EssentialsCMDTpdeny(s: sender):
	load "plugins/Essentials/config.yml"
	{Essentials::%{_s}'s uuid%::tpa} isn't set:
		yaml value "language" from "config" = "English":
			send "&4| &8x &cYou don't have a teleportation request." to {_s}
	else:
		delete {Essentials::%{_s}'s uuid%::tpa}
		yaml value "language" from "config" = "English":
			send "&7You have deny the request." to {_s}
			send "&7The player &6%{_s}% &7deny your teleportation request." to {Essentials::%{_s}'s uuid%::tpa}

function EssentialsCMDTpaccept(s: sender):
	{Essentials::%{_s}'s uuid%::tpa} isn't set:
		load "plugins/Essentials/config.yml"
		yaml value "language" from "config" = "English":
			send "&4| &8x &cYou have not a teleportation request." to {_s}
	else:
		{_s} has permission "essentials.tpaccept.bypass" or "essentials.*":
			load "plugins/Essentials/players/%{_s}%/who.yml"
			yaml value "back.stats" from "who" = false:
				set yaml value "back.stats" from "who" to true
				set yaml value "back.location" from "who" to location of {_s}
			load "plugins/Essentials/config.yml"
			yaml value "language" from "config" = "English":
				send "&7You have accepted the request." to {Essentials::%{_s}'s uuid%::tpa}
				send "&7The player &6%{_s}% &7accepted your teleportation request." to {_s}
			teleport {Essentials::%{_s}'s uuid%::tpa} to {_s}
			delete {Essentials::%{_s}'s uuid%::tpa}
		else:
			load "plugins/Essentials/players/%{_s}%/who.yml"
			yaml value "back.stats" from "who" = false:
				set yaml value "back.stats" from "who" to true
				set yaml value "back.location" from "who" to location of {_s}
			load "plugins/Essentials/config.yml"
			yaml value "language" from "config" = "English":
				send "&7You have accepted the request." to {_s}
				send "&7You have waiting &6%yaml value "tpaccept.cooldown-teleport" from "config"% &7seconds for teleport at location of player." to {Essentials::%{_s}'s uuid%::tpa}
			wait ("%yaml value "tpaccept.cooldown-teleport" from "config"% seconds" parsed as timespan)
			teleport {Essentials::%{_s}'s uuid%::tpa} to {_s}
			delete {Essentials::%{_s}'s uuid%::tpa}

function EssentialsCMDTpa(s: sender, p: offline player):
	set {Essentials::%{_s}'s uuid%::tpa} to {_s}
	load "plugins/Essentials/config.yml"
	yaml value "language" from "config" = "English":
		send "&7You have requested a teleportation request from the player &6%{_p}%&7."  to {_s}
		send "&7You have a request for teleportation by the player &6%{_s}%&7, use the &c/tpaccept &7to be able to accept the request or the &c/tpdeny &7to be able to refuse a request." to {_p}

function EssentialsCMDPing1(s: sender):
	yaml value "language" from "config" = "English":
		send "&7You have &6%{_s}'s ping% &7ping." to {_s}

function EssentialsCMDPing2(s: sender, p: offline player):
	{_s} has permission "essentials.ping.others" or "essentials.*":
		load "plugins/Essentials/config.yml"
		yaml value "language" from "config" = "English":
			send "&7The player &6%{_s}% &7has &6%{_p}'s ping% &7ping." to {_s}
	else:
		EssentialsNoPermission({_s})

on build:
	load "plugins/Essentials/players/%player%/who.yml"
	yaml value "freeze.stats" from "who" = true:
		player has permission "essentials.freeze.bypass" or "essentials.*":
			set yaml value "freeze.stats" from "who" to false
			set yaml value "freeze.date" from "who" to "%now%"
			delete {Essentials::freezelist::%player's uuid%}
			save yaml "who"
			unload yaml "who"
			stop
		else:
			cancel event

on break:
	load "plugins/Essentials/players/%player%/who.yml"
	yaml value "freeze.stats" from "who" = true:
		player has permission "essentials.freeze.bypass" or "essentials.*":
			set yaml value "freeze.stats" from "who" to false
			set yaml value "freeze.date" from "who" to "%now%"
			delete {Essentials::freezelist::%player's uuid%}
			save yaml "who"
			unload yaml "who"
			stop
		else:
			cancel event

on player move:
	load "plugins/Essentials/players/%player%/who.yml"
	yaml value "freeze.stats" from "who" = true:
		player has permission "essentials.freeze.bypass" or "essentials.*":
			set yaml value "freeze.stats" from "who" to false
			set yaml value "freeze.date" from "who" to "%now%"
			delete {Essentials::freezelist::%player's uuid%}
			save yaml "who"
			unload yaml "who"
			stop
		else:
			cancel event

on click:
	load "plugins/Essentials/players/%player%/who.yml"
	yaml value "freeze.stats" from "who" = true:
		player has permission "essentials.freeze.bypass" or "essentials.*":
			set yaml value "freeze.stats" from "who" to false
			set yaml value "freeze.date" from "who" to "%now%"
			delete {Essentials::freezelist::%player's uuid%}
			save yaml "who"
			unload yaml "who"
			stop
		else:
			cancel event

on inventory click:
	load "plugins/Essentials/players/%player%/who.yml"
	yaml value "freeze.stats" from "who" = true:
		player has permission "essentials.freeze.bypass" or "essentials.*":
			set yaml value "freeze.stats" from "who" to false
			set yaml value "freeze.date" from "who" to "%now%"
			delete {Essentials::freezelist::%player's uuid%}
			save yaml "who"
			unload yaml "who"
			stop
		else:
			cancel event

on drop:
	load "plugins/Essentials/players/%player%/who.yml"
	yaml value "freeze.stats" from "who" = true:
		player has permission "essentials.freeze.bypass" or "essentials.*":
			set yaml value "freeze.stats" from "who" to false
			set yaml value "freeze.date" from "who" to "%now%"
			delete {Essentials::freezelist::%player's uuid%}
			save yaml "who"
			unload yaml "who"
			stop
		else:
			cancel event

on damage:
	victim = player:
		{Essentials::%{_p}'s uuid%::godmode} = true:
			cancel event

on build:
	player doesn't have permission "essentials.build" or "essentials.*":
		cancel event
		EssentialsNoBuild(player)
	else:
		player doesn't have permission "essentials.build.bypass" or "essentials.*":
			load "plugins/Essentials/config.yml"
			yaml list "block-place" from "config" contains event-block:
				cancel event
				yaml value "language" from "config" = "English":
					send "&4| &8x &cYou have not a build with this block." to player

on break:
	player doesn't have permission "essentials.build" or "essentials.*":
		cancel event
		EssentialsNoBuild(player)

on quit:
	EssentialsNoAfk(player)

on break:
	EssentialsNoAfk(player)

on build:
	EssentialsNoAfk(player)

on player move:
	EssentialsNoAfk(player)

on flight toggle:
	EssentialsNoAfk(player)

on chat:
	EssentialsNoAfk(player)

on click:
	EssentialsNoAfk(player)

on damage:
	victim = player:
		EssentialsNoAfk(victim)

on inventory click:
	EssentialsNoAfk(player)

on swap hand item:
	player doesn't have permission "essentials.antiswapitem.bypass" or "essentials.*":
		cancel event

on drop:
	player doesn't have permission "essentials.antidrop.bypass" or "essentials.*":
		cancel event

on portal create:
	player doesn't have permission "essentials.portalcreate" or "essentials.*":
		cancel event

on quit:
	EssentialsCMDSpeedCLEAR(player)

on join:
	load "plugins/Essentials/config.yml"
	yaml value "firstjoin-message.stats" from "config" = true:
		load  "plugins/Essentials/players/%player%/who.yml"
		yaml value "firstjoin.stats" from "who" = false:
			yaml value "language" from "config" = "English":
				broadcast "&6%player% &6has joined the server for the first time." to all worlds

on join:
	load "plugins/Essentials/config.yml"
	yaml value "join-message.stats" from "config" = true:
		load "plugins/Essentials/config.yml"
		yaml value "language" from "config" = "English":
			set join message to "&6%player% &7has joined the server."

on quit:
	load "plugins/Essentials/config.yml"
	yaml value "quit-message.stats" from "config" = true:
		load "plugins/Essentials/config.yml"
		yaml value "language" from "config" = "English":
			set quit message to "&6%player% &cleaved the server."

on sign change:
	player has permission "essentials.sign.color" or "essentials.*":
		replace "&" with "§" in line 1
		replace "&" with "§" in line 2
		replace "&" with "§" in line 3
		replace "&" with "§" in line 4

on death:
	player has permission "essentials.deathmessage" or "essentials.*":
		load "plugins/Essentials/players/%player%/who.yml"
		yaml value "back.stats" from "who" = false:
			set yaml value "back.stats" from "who" to true
			set yaml value "back.location" from "who" to location of player
		load "plugins/Essentials/config.yml"
		yaml value "language" from "config" = "English":
			set death message to "&6%player% &cjust died."
		save yaml "who"
		unload yaml "who"
		stop
	player has permission "essentials.forcerespawn" or "essentials.*":
		force player to respawn

on enchant prepare:
	player doesn't have permission "essentials.enchanted" or "essentials.*":
		cancel event

on chat:
	load "plugins/Essentials/config.yml"
	yaml value "chat.format-stats" from "config" = true:
		yaml value "chat.stats" from "config" = false:
			yaml value "language" from "config" = "English":
				cancel event
				send "&4| &8x &cYou not have permission to send message in the chat." to player
		else:
			cancel event
			load  "plugins/Essentials/players/%player%/who.yml"
			yaml value "mute.stats" from "who" = true:
				yaml value "mute.type-mute" from "who" = "Mute":
					send "&4| &8x &cYou have been muted because &6%yaml value "mute.reason" from "who"%&c." to player
				yaml value "mute.type-mute" from "who" = "Tempmute":
					send "&4| &8x &cYou have been muted because &6%yaml value "mute.reason" from "who"% &cduring &6%yaml value "mute.times" from "who"%&c." to player
			else:
				player has permission "essentials.chat.color" or "essentials.chat.*" or "essentials.*":
					broadcast "&7%player%&7: &f%colored message%" to all worlds
				else:
					broadcast "&7%player%&7: &f%message%" to all worlds

every 1 seconds:
	load "plugins/Essentials/config.yml"
	yaml value "language" from "config" = "English":
		wait ("%yaml value "afk.cooldown-kicked" from "config"% seconds" parsed as timespan)
		loop all players:
			load "plugins/Essentials/players/%loop-player%/who.yml"
			yaml value "afk.stats" from "who" = true:
				loop-player doesn't have permission "essentials.afk.kick.bypass" or "essentials.afk.*" or "essentials.*":
					kick loop-player because "&cYou have been kicked from the server.&f%nl%%nl%&7Reason: &cAFK&f%nl%&7Date: &c%now% &f%nl%%nl%&6For more information on this, join the server's discord."

every 1 seconds:
	load "plugins/Essentials/config.yml"
	yaml value "maintenance.stats" from "config" = true:
		yaml value "language" from "config" = "English":
			loop all players:
				loop-player doesn't have permission "essentials.maintenance.bypass" or "essentials.*":
					kick loop-player because "&cYou have been kicked from the server.&f%nl%%nl%&7Reason: &cMaintenance&f%nl%&7Date: &c%now% &f%nl%%nl%&6For more information on this, join the server's discord."

command /essentials [<text>] [<text>]:
	aliases: /ess, essentials:essentials, essentials:ess
	description: &fEssentials command /essentials.
	trigger:
		arg 1 isn't set:
			EssentialsHelp(sender, "EssentialsCMD")
		else:
			arg 1 != "info" or "reload":
				EssentialsHelp(sender, "EssentialsCMD")
			arg 1 = "info":
				load "plugins/Essentials/config.yml"
				yaml value "language" from "config" = "English":
					send "" to sender
					send "&8| &8x &6Help:" to sender
					send "" to sender
					send "&8| &fName of skript: &cEssentials (Skript)" to sender
					send "&8| &fAuthor of skript: &calexisl315 (Alias: Lennord)" to sender
					send "&8| &fDescription of skript: &cThis skript allows you to redo all or almost all the functionality of the EssentialsX plugin." to sender
					send "&8| &fVersion of skript: &c2.0.3" to sender
					send "&8| &fPlugin requirements: &cSkript &7and &cSkript-YAML" to sender
					send "&8| &fAll languages of skript: &cEnglish" to sender
					send "" to sender
			arg 1 = "reload":
				make console execute command "/sk reload Essentials"
				load "plugins/Essentials/config.yml"
				yaml value "language" from "config" = "English":
					send "&7You have been reloaded this skript." to sender

on command "/essentials" or "/ess" or "/essentials:essentials" or "/essentials:ess":
	sender = player:
		player doesn't have permission "essentials.essentials" or "essentials.*":
			cancel event
			EssentialsNoPermission(player)

command /afk [<offline player>] [<text>]:
	aliases: essentials:afk
	description: &fEssentials command /afk.
	trigger:
		arg 1 isn't set:
			sender = player:
				EssentialsCMDAfk1(player)
			sender = console:
				EssentialsHelp(console, "AfkCMD")
		else:
			arg 1 is offline:
				EssentialsPlayerOffline(sender, arg 1)
			else:
				EssentialsCMDAfk2(sender, arg 1)

on command "/afk" or "/essentials:afk":
	sender = player:
		player doesn't have permission "essentials.afk" or "essentials.*":
			cancel event
			EssentialsNoPermission(player)

command /antioch [<offline player>] [<text>]:
	aliases: essentials:antioch, grenade, essentials:grenade, tnt, essentials:tnt
	description: &fEssentials command /antioch.
	trigger:
		sender = player:
			arg 1 isn't set:
				EssentialsCMDAntioch1(player)
			else:
				arg 1 is offline:
					EssentialsPlayerOffline(sender, arg 1)
				else:
					EssentialsCMDAntioch2(player, arg 1)
		sender = console:
			EssentialsNoCommandConsole(console)

on command "/antioch" or "/essentials:antioch" or "/grenade" or "/essentials:grenade" or "/tnt" or "/essentials:tnt":
	sender = player:
		player doesn't have permission "essentials.antioch" or "essentials.*":
			cancel event
			EssentialsNoPermission(player)

command /back [<offline player>] [<text>]:
	aliases: essentials:back, return, essentials:return
	description: &fEssentials command /back.
	trigger:
		arg 1 isn't set:
			sender = player:
				EssentialsCMDBack1(player)
			sender = console:
				EssentialsHelp(console, "BackCMD")
		else:
			arg 1 is offline:
				EssentialsPlayerOffline(sender, arg 1)
			else:
				EssentialsCMDBack2(sender, arg 1)

on command "/back" or "/essentials:back" or "/return" or "/essentials:return":
	sender = player:
		player doesn't have permission "essentials.back" or "essentials.*":
			cancel event
			EssentialsNoPermission(player)

command /ban [<offline player>] [<text>]:
	aliases: essentials:ban
	description: &fEssentials command /ban.
	trigger:
		arg 1 isn't set:
			EssentialsHelp(sender, "BanCMD")
		else:
			arg 2 isn't set:
				EssentialsHelp(sender, "BanCMD")
			else:
				EssentialsCMDBan(sender, arg 1, arg 2)

command /banlist [<text>]:
	aliases: essentials:banlist
	description: &fEssentials command /banlist.
	trigger:
		EssentialsCMDBanlist(sender)

on command "/banlist" or "/essentials:banlist":
	sender = player:
		player doesn't have permission "essentials.banlist" or "essentials.*":
			cancel event
			EssentialsNoPermission(player)

on command "/ban" or "/essentials:ban":
	sender = player:
		player doesn't have permission "essentials.ban" or "essentials.*":
			cancel event
			EssentialsNoPermission(player)

command /unban [<offline player>] [<text>]:
	aliases: essentials:unban
	description: &fEssentials command /unban.
	trigger:
		arg 1 isn't set:
			EssentialsHelp(sender, "UnbanCMD")
		else:
			EssentialsCMDUnban(sender, arg 1)

on command "/unban" or "/essentials:unban":
	sender = player:
		player doesn't have permission "essentials.unban" or "essentials.*":
			cancel event
			EssentialsNoPermission(player)

command /tempban [<offline player>] [<text>] [<timespan>]:
	aliases: essentials:tempban
	description: &fEssentials command /tempban.
	trigger:
		arg 1 isn't set:
			EssentialsHelp(sender, "TempbanCMD")
		else:
			arg 2 isn't set:
				EssentialsHelp(sender, "TempbanCMD")
			else:
				arg 3 isn't set:
					EssentialsHelp(sender, "TempbanCMD")
				else:
					EssentialsCMDTempban(sender, arg 1, arg 2, arg 3)

on command "/tempban" or "/essentials:tempban":
	sender = player:
		player doesn't have permission "essentials.tempban" or "essentials.*":
			cancel event
			EssentialsNoPermission(player)

command /bedteleport [<offline player>] [<text>]:
	aliases: essentials:bedteleport, bt, essentials:bt
	description: &fEssentials command /bedteleport.
	trigger:
		sender = player:
			arg 1 isn't set:
				EssentialsCMDBedteleport1(player)
			else:
				arg 1 is offline:
					EssentialsPlayerOffline(sender, arg 1)
				else:
					EssentialsCMDBedteleport2(sender, arg 1)
		sender = console:
			EssentialsNoCommandConsole(console)

on command "/bedteleport" or "/essentials:bedteleport" or "/bt" or "/essentials:bt":
	sender = player:
		player doesn't have permission "essentials.bedteleport" or "essentials.*":
			cancel event
			EssentialsNoPermission(player)

command /break [<offline player>] [<text>]:
	aliases: essentials:break
	description: &fEssentials command /break.
	trigger:
		sender = player:
			delete the targeted block of player
			send "&7You have been broked at location of the target's block." to player
		sender = console:
			EssentialsNoCommandConsole(console)

on command "/break" or "/essentials:break":
	sender = player:
		player doesn't have permission "essentials.break" or "essentials.*":
			cancel event
			EssentialsNoPermission(player)

command /broadcast [<text>] [<text>]:
	aliases: essentials:broadcast, bc, essentials:bc
	description: &fEssentials command /broadcast.
	trigger:
		sender = player:
			arg 1 isn't set:
				EssentialsHelp(player, "BroadcastCMD")
			else:
				arg 2 isn't set:
					EssentialsHelp(player, "BroadcastCMD")
				else:
					EssentialsCMDBroadcast(player, arg 1, arg 2)
		sender = console:
			EssentialsNoCommandConsole(console)

on command "/broadcast" or "/essentials:broadcast" or "/bc" or "/essentials:bc":
	sender = player:
		player doesn't have permission "essentials.broadcast" or "essentials.*":
			cancel event
			EssentialsNoPermission(player)

command /chat [<text>] [<text>]:
	aliases: essentials:chat
	description: &fEssentials command /chat.
	trigger:
		arg 1 isn't set:
			EssentialsHelp(sender, "ChatCMD")
		else:
			arg 1 != "enable" or "on" or "disable" or "off" or "toggle" or "clear":
				EssentialsHelp(sender, "ChatCMD")
			arg 1 = "enable" or "on":
				EssentialsCMDChat(sender, "Enable")
			arg 1 = "disable" or "off":
				EssentialsCMDChat(sender, "Disable")
			arg 1 = "toggle":
				EssentialsCMDChat(sender, "Toggle")
			arg 1 = "clear":
				EssentialsCMDChat(sender, "Clear")

on command "/chat" or "/essentials:chat":
	sender = player:
		player doesn't have permission "essentials.chat" or "essentials.*":
			cancel event
			EssentialsNoPermission(player)

command /chunkslime [<offline player>] [<text>]:
	aliases: essentials:chunkslime
	description: &fEssentials command /chunkslime.
	trigger:
		sender = player:
			arg 1 isn't set:
				EssentialsCMDChunkSlime1(sender)
			else:
				arg 1 is offline:
					EssentialsPlayerOffline(sender, arg 1)
				else:
					EssentialsCMDChunkSlime2(sender, arg 1)
		sender = console:
			EssentialsNoCommandConsole(console)

on command "/chunkslime" or "/essentials:chunkslime":
	sender = player:
		player doesn't have permission "essentials.chunkslime" or "essentials.*":
			cancel event
			EssentialsNoPermission(player)

command /clearinventory [<offline player>] [<text>]:
	aliases: essentials:clearinventory, ci, essentials:ci, clearinv, essentials:clearinv
	description: &fEssentials command /clearinventory.
	trigger:
		arg 1 isn't set:
			sender = player:
				EssentialsCMDClearinventory1(sender)
			sender = console:
				EssentialsHelp(sender, "ClearinventoryCMD")
		else:
			arg 1 is offline:
				EssentialsPlayerOffline(sender, arg 1)
			else:
				EssentialsCMDClearinventory2(sender, arg 1)

on command "/clearinventory" or "/essentials:clearinventory" or "/ci" or "/essentials:ci" or "/clearinv" or "/essentials:clearinv":
	sender = player:
		player doesn't have permission "essentials.clearinventory" or "essentials.*":
			cancel event
			EssentialsNoPermission(player)

command /compass [<offline player>] [<text>]:
	aliases: essentials:compass, direction, essentials:direction
	description: &fEssentials command /compass.
	trigger:
		arg 1 isn't set:
			sender = player:
				EssentialsCMDCompass1(sender)
			sender = console:
				EssentialsHelp(console, "CompassCMD")
		else:
			arg 1 is offline:
				EssentialsPlayerOffline(sender, arg 1)
			else:
				EssentialsCMDCompass2(sender, arg 1)

on command "/compass" or "/essentials:compass" or "/direction" or "/essentials:direction":
	sender = player:
		player doesn't have permission "essentials.compass" or "essentials.*":
			cancel event
			EssentialsNoPermission(player)

command /deop [<offline player>] [<text>]:
	aliases: essentials:deop, deoperator, essentials:deoperator
	description: &fEssentials command /deop.
	trigger:
		arg 1 isn't set:
			EssentialsHelp(sender, "DeopCMD")
		else:
			EssentialsCMDDeop(sender, arg 1)

on command "/deop" or "/essentials:deop" or "/deoperator" or "/essentials:deoperator":
	sender = player:
		player doesn't have permission "essentials.deop" or "essentials.*":
			cancel event
			EssentialsNoPermission(player)

command /op [<offline player>] [<text>]:
	aliases: essentials:op, operator, essentials:operator
	description: &fEssentials command /op.
	trigger:
		arg 1 isn't set:
			EssentialsHelp(sender, "OpCMD")
		else:
			EssentialsCMDOp(sender, arg 1)

on command "/op" or "/essentials:op" or "/operator" or "/essentials:operator":
	sender = player:
		player doesn't have permission "essentials.op" or "essentials.*":
			cancel event
			EssentialsNoPermission(player)

command /thor [<text>]:
	aliases: essentials:thor
	description: &fEssentials command /thor.
	trigger:
		sender = player:
			EssentialsCMDThor(player)
		sender = console:
			EssentialsNoCommandConsole(console)

on command "/thor" or "/essentials:thor":
	sender = player:
		player doesn't have permission "essentials.thor" or "essentials.*":
			cancel event
			EssentialsNoPermission(player)

command /tps [<text>]:
	aliases: essentials:tps
	description: &fEssentials command /tps.
	trigger:
		EssentialsCMDTps(sender)

on command "/tps" or "/essentials:tps":
	sender = player:
		player doesn't have permission "essentials.tps" or "essentials.*":
			cancel event
			EssentialsNoPermission(player)

command /workbench [<offline player>] [<text>]:
	aliases: essentials:workbench, wb, essentials:wb
	description: &fEssentials command /workbench.
	trigger:
		sender = player:
			arg 1 isn't set:
				EssentialsCMDWorkbench1(player)
			else:
				arg 1 is offline:
					EssentialsPlayerOffline(player, arg 1)
				else:
					EssentialsCMDWorkbench2(player, arg 1)
		sender = console:
			EssentialsNoCommandConsole(console)

on command "/workbench" or "/essentials:workbench" or "/wb" or "/essentials:wb":
	sender = player:
		player doesn't have permission "essentials.workbench" or "essentials.*":
			cancel event
			EssentialsNoPermission(player)

command /stop [<text>]:
	aliases: essentials:stop
	description: &fEssentials command /stop.
	trigger:
		EssentialsCMDStop(sender)

on command "/stop" or "/essentials:stop":
	sender = player:
		player doesn't have permission "essentials.stop" or "essentials.*":
			cancel event
			EssentialsNoPermission(player)

command /getpos [<offline player>] [<text>]:
	aliases: essentials:getpos, coords, essentials:coords, getlocation, essentials:getlocation, getloc, essentials:getloc
	description: &fEssentials command /getpos.
	trigger:
		arg 1 isn't set:
			sender = player:
				EssentialsCMDGetpos1(player)
			sender = console:
				EssentialsHelp(console, "GetposCMD")
		else:
			arg 1 is offline:
				EssentialsPlayerOffline(sender, arg 1)
			else:
				EssentialsCMDGetpos2(sender, arg 1)

on command "/getpos" or "/essentials:getpos" or "/coords" or "/essentials:coords" or "/getlocation" or "/essentials:getlocation" or "/getloc" or "/essentials:getloc":
	sender = player:
		player doesn't have permission "essentials.getpos" or "essentials.*":
			cancel event
			EssentialsNoPermission(player)

command /helpop [<text>]:
	aliases: essentials:helpop
	description: &fEssentials command /helpop.
	trigger:
		sender = player:
			arg 1 isn't set:
				EssentialsHelp(player, "HelpopCMD")
			else:
				EssentialsCMDHelpop(player, arg 1)
		sender = console:
			EssentialsNoCommandConsole(console)

on command "/helpop" or "/essentials:helpop":
	sender = player:
		player doesn't have permission "essentials.helpop" or "essentials.*":
			cancel event
			EssentialsNoPermission(player)

command /give [<text>] [<number>] [<text>]:
	aliases: essentials:give
	description: &fEssentials command /give.
	trigger:
		sender = player:
			arg 1 isn't set:
				EssentialsHelp(player, "GiveCMD")
			else:
				arg 2 isn't set:
					EssentialsHelp(player, "GiveCMD")
				else:
					EssentialsCMDGive(player, arg 1, arg 2)
		sender = console:
			EssentialsNoCommandConsole(console)

on command "/give" or "/essentials:give":
	sender = player:
		player doesn't have permission "essentials.give" or "essentials.*":
			cancel event
			EssentialsNoPermission(player)

command /seed [<text>] [<text>]:
	aliases: essentials:seed
	description: &fEssentials command /seed.
	trigger:
		sender = player:
			arg 1 isn't set:
				EssentialsCMDSeed1(player)
			else:
				EssentialsCMDSeed2(player, arg 1)
		sender = console:
			EssentialsNoCommandConsole(console)

on command "/seed" or "/essentials:seed":
	sender = player:
		player doesn't have permission "essentials.seed" or "essentials.*":
			cancel event
			EssentialsNoPermission(player)

command /skull [<offline player>] [<text>]:
	aliases: essentials:skull, head, essentials:head, playerhead, essentials:playerhead
	description: &fEssentials command /skull.
	trigger:
		sender = player:
			arg 1 isn't set:
				EssentialsHelp(player, "SkullCMD")
			else:
				EssentialsCMDSkull(player, arg 1)
		sender = console:
			EssentialsNoCommandConsole(console)

on command "skull" or "essentials:skull" or "head" or "essentials:head" or "playerhead" or "essentials:playerhead":
	sender = player:
		player doesn't have permission "essentials.skull" or "essentials.*":
			cancel event
			send "&4| &8x &cYou do not have permission to use this command." to player

command /enderchest [<offline player>] [<text>]:
	aliases: essentials:enderchest, ec, essentials:ec
	description: &fEssentials command /enderchest.
	trigger:
		sender = player:
			arg 1 isn't set:
				EssentialsCMDEnderchest1(player)
			else:
				arg 1 is offline:
					EssentialsPlayerOffline(player, arg 1)
				else:
					EssentialsCMDEnderchest2(player, arg 1)
		sender = console:
			EssentialsNoCommandConsole(console)

on command "/enderchest" or "/essentials:enderchest" or "/ec" or "/essentials:ec":
	sender = player:
		player doesn't have permission "essentials.enderchest" or "essentials.*":
			cancel event
			EssentialsNoPermission(player)

command /slap [<offline player>] [<text>]:
	aliases: essentials:slap
	description: &fEssentials command /slap.
	trigger:
		arg 1 isn't set:
			EssentialsHelp(sender, "SlapCMD")
		else:
			arg 1 is offline:
				EssentialsPlayerOffline(sender, arg 1)
			else:
				EssentialsCMDSlap(sender, arg 1)

on command "/slap" or "/essentials:slap":
	sender = player:
		player doesn't have permission "essentials.slap" or "essentials.*":
			cancel event
			EssentialsNoPermission(player)

command /jump [<offline player>] [<text>]:
	aliases: essentials:jump
	description: &fEssentials command /jump.
	trigger:
		sender = player:
			arg 1 isn't set:
				EssentialsCMDJump1(sender)
			else:
				arg 1 is offline:
					EssentialsPlayerOffline(sender, arg 1)
				else:
					EssentialsCMDJump2(sender, arg 1)
		sender = console:
			EssentialsNoCommandConsole(console)

on command "/jump" or "/essentials:jump":
	sender = player:
		player doesn't have permission "essentials.jump" or "essentials.*":
			cancel event
			EssentialsNoPermission(player)

command /list [<text>]:
	aliases: essentials:list
	description: &fEssentials command /list.
	trigger:
		EssentialsCMDList(sender)

on command "/list" or "/essentials:list":
	sender = player:
		player doesn't have permission "essentials.list" or "essentials.*":
			cancel event
			EssentialsNoPermission(player)

command /fireball [<offline player>] [<text>]:
	aliases: essentials:fireball
	description: &fEssentials command /fireball.
	trigger:
		sender = player:
			arg 1 isn't set:
				EssentialsCMDFireball1(sender)
			else:
				arg 1 is offline:
					EssentialsPlayerOffline(sender, arg 1)
				else:
					EssentialsCMDFireball2(sender, arg 1)
		sender = console:
			EssentialsNoCommandConsole(console)

on command "/fireball" or "/essentials:fireball":
	sender = player:
		player doesn't have permission "essentials.fireball" or "essentials.*":
			cancel event
			EssentialsNoPermission(player)

command /me [<text>]:
	aliases: essentials:me
	description: &fEssentials command /me.
	trigger:
		sender = player:
			arg 1 isn't set:
				EssentialsHelp(player, "MeCMD")
			else:
				EssentialsCMDMe(player, arg 1)
		sender = console:
			EssentialsNoCommandConsole(console)

on command "/me" or "/essentials:me":
	sender = player:
		player doesn't have permission "essentials.me" or "essentials.*":
			cancel event
			EssentialsNoPermission(player)

command /invsee [<offline player>] [<text>]:
	aliases: essentials:invsee
	description: &fEssentials command /invsee.
	trigger:
		sender = player:
			arg 1 isn't set:
				EssentialsHelp(sender, "InvseeCMD")
			else:
				arg 1 is offline:
					EssentialsPlayerOffline(sender, arg 1)
				else:
					EssentialsCMDInvsee(sender, arg 1)
		sender = console:
			EssentialsNoCommandConsole(console)

on command "/invsee" or "/essentials:invsee":
	sender = player:
		player doesn't have permission "essentials.invsee" or "essentials.*":
			cancel event
			EssentialsNoPermission(player)

command /itemdb [<offline player>] [<text>]:
	aliases: essentials:itemdb
	description: &fEssentials command /itemdb.
	trigger:
		sender = player:
			arg 1 isn't set:
				EssentialsCMDItemdb1(sender)
			else:
				arg 1 is offline:
					EssentialsPlayerOffline(sender, arg 1)
				else:
					EssentialsCMDItemdb2(sender, arg 1)
		sender = console:
			EssentialsNoCommandConsole(console)

on command "/itemdb" or "/essentials:itemdb":
	sender = player:
		player doesn't have permission "essentials.itemdb" or "essentials.*":
			cancel event
			EssentialsNoPermission(player)

command /randomteleport [<text>]:
	aliases: essentials:randomteleport, rtp, essentials:rtp
	description: &fEssentials command /randomteleport.
	trigger:
		sender = player:
			EssentialsCMDRandomTeleport(player)
		sender = console:
			EssentialsNoCommandConsole(console)

on command "/randomteleport" or "/essentials:randomteleport" or "/rtp" or "/essentials:rtp":
	sender = player:
		player doesn't have permission "essentials.randomteleport" or "essentials.*":
			cancel event
			EssentialsNoPermission(player)

command /repair [<text>] [<text>]:
	aliases: essentials:repair
	description: &fEssentials command /repair.
	trigger:
		sender = player:
			arg 1 isn't set:
				EssentialsCMDRepair(player, "ONE")
			else:
				arg 1 != "all":
					EssentialsCMDRepair(player, "ONE")
				arg 1 = "all":
					EssentialsCMDRepair(player, "ALL")
		sender = console:
			EssentialsNoCommandConsole(console)

on command "/repair" or "/essentials:repair":
	sender = player:
		player doesn't have permission "essentials.repair" or "essentials.*":
			cancel event
			EssentialsNoPermission(player)

command /weather [<text>] [<text>]:
	aliases: essentials:weather
	description: &fEssentials command /weather.
	trigger:
		sender = player:
			arg 1 isn't set:
				EssentialsHelp(player, "WeatherCMD")
			else:
				arg 1 != "sun" or "clear" or "thunder" or "rain":
					EssentialsHelp(player, "WeatherCMD")
				arg 1 = "clear":
					EssentialsCMDWeather(player, "CLEAR")
				arg 1 = "sun":
					EssentialsCMDWeather(player, "SUN")
				arg 1 = "rain":
					EssentialsCMDWeather(player, "RAIN")
				arg 1 = "thunder":
					EssentialsCMDWeather(player, "THUNDER")
		sender = console:
			EssentialsNoCommandConsole(console)

on command "/weather" or "/essentials:weather":
	sender = player:
		player doesn't have permission "essentials.weather" or "essentials.*":
			cancel event
			EssentialsNoPermission(player)

command /depth [<offline player>] [<text>]:
	aliases: essentials:depth
	description: &fEssentials command /depth.
	trigger:
		sender = player:
			arg 1 isn't set:
				EssentialsCMDDepth1(sender)
			else:
				arg 1 is offline:
					EssentialsPlayerOffline(sender, arg 1)
				else:
					EssentialsCMDDepth2(sender, arg 1)
		sender = console:
			EssentialsNoCommandConsole(console)

on command "/depth" or "/essentials:depth":
	sender = player:
		player doesn't have permission "essentials.depth" or "essentials.*":
			cancel event
			EssentialsNoPermission(player)

command /extinguish [<offline player>] [<text>]:
	aliases: essentials:extinguish, ext, essentials:ext
	description: &fEssentials command /extinguish.
	trigger:
		sender = player:
			arg 1 isn't set:
				EssentialsCMDExtinguish1(sender)
			else:
				arg 1 is offline:
					EssentialsPlayerOffline(sender, arg 1)
				else:
					EssentialsCMDExtinguish2(sender, arg 1)
		sender = console:
			EssentialsNoCommandConsole(console)

on command "/extinguish" or "/essentials:extinguish" or "/ext" or "/essentials:ext":
	sender = player:
		player doesn't have permission "essentials.extinguish" or "essentials.*":
			cancel event
			EssentialsNoPermission(player)

command /unenchant [<offline player>] [<text>]:
	aliases: essentials:unenchant
	description: &fEssentials command /unenchant.
	trigger:
		sender = player:
			arg 1 isn't set:
				EssentialsCMDUnenchant1(sender)
			else:
				arg 1 is offline:
					EssentialsPlayerOffline(sender, arg 1)
				else:
					EssentialsCMDUnenchant2(sender, arg 1)
		sender = console:
			EssentialsNoCommandConsole(console)

on command "/unenchant" or "/essentials:unenchant":
	sender = player:
		player doesn't have permission "essentials.unenchant" or "essentials.*":
			cancel event
			EssentialsNoPermission(player)

command /speed [<text>] [<integer>] [<text>]:
	aliases: essentials:speed
	description: &fEssentials command /speed.
	trigger:
		sender = player:
			arg 1 isn't set:
				EssentialsHelp(sender, "SpeedCMD")
			else:
				arg 1 != "clear" or "fly" or "walk":
					EssentialsHelp(sender, "SpeedCMD")
				arg 1 = "clear":
					EssentialsCMDSpeedCLEAR(sender)
				arg 1 = "fly":
					arg 2 isn't set:
						EssentialsHelp(sender, "SpeedCMD")
					else:
						arg 2 = 0 or 1 or 2 or 3 or 3 or 4 or 5 or 6 or 7 or 8 or 9 or 10:
							EssentialsCMDSpeedFLY(sender, arg 2)
						arg 2 != 0 or 1 or 2 or 3 or 3 or 4 or 5 or 6 or 7 or 8 or 9 or 10:
							EssentialsHelp(sender, "SpeedCMD")
				arg 1 = "walk":
					arg 2 isn't set:
						EssentialsHelp(sender, "SpeedCMD")
					else:
						arg 2 = 0 or 1 or 2 or 3 or 3 or 4 or 5 or 6 or 7 or 8 or 9 or 10:
							EssentialsCMDSpeedWALK(sender, arg 2)
						arg 2 != 0 or 1 or 2 or 3 or 3 or 4 or 5 or 6 or 7 or 8 or 9 or 10:
							EssentialsHelp(sender, "SpeedCMD")
		sender = console:
			EssentialsNoCommandConsole(console)

on command "/speed" or "/essentials:speed":
	sender = player:
		player doesn't have permission "essentials.speed" or "essentials.*":
			cancel event
			EssentialsNoPermission(player)

command /spawn [<offline player>] [<text>]:
	aliases: essentials:spawn
	description: &fEssentials command /spawn.
	trigger:
		arg 1 isn't set:
			sender = player:
				EssentialsCMDSpawn1(player)
			sender = console:
				EssentialsHelp(console, "SpawnCMD")
		else:
			arg 1 is offline:
				EssentialsPlayerOffline(sender, arg 1)
			else:
				EssentialsCMDSpawn2(sender, arg 1)

on command "/spawn" or "/essentials:spawn":
	sender = player:
		player doesn't have permission "essentials.spawn" or "essentials.*":
			cancel event
			EssentialsNoPermission(player)

command /setspawn [<text>]:
	aliases: essentials:setspawn, createspawn, essentials:createspawn
	description: &fEssentials command /setspawn.
	trigger:
		sender = player:
			EssentialsCMDSetspawn(sender)
		sender = console:
			EssentialsNoCommandConsole(console)

on command "/setspawn" or "/essentials:setspawn":
	sender = player:
		player doesn't have permission "essentials.setspawn" or "essentials.*":
			cancel event
			EssentialsNoPermission(player)

command /delspawn [<text>]:
	aliases: essentials:delspawn, deletespawn, essentials:deletespawn
	description: &fEssentials command /delspawn.
	trigger:
		sender = player:
			EssentialsCMDDelspawn(sender)
		sender = console:
			EssentialsNoCommandConsole(console)

on command "/delspawn" or "/essentials:delspawn":
	sender = player:
		player doesn't have permission "essentials.delspawn" or "essentials.*":
			cancel event
			EssentialsNoPermission(player)

command /vanish [<offline player>] [<text>]:
	aliases: essentials:vanish
	description: &fEssentials command /vanish.
	trigger:
		sender = player:
			arg 1 isn't set:
				EssentialsCMDVanish1(player)
			else:
				arg 1 is offline:
					EssentialsPlayerOffline(sender, arg 1)
				else:
					EssentialsCMDVanish2(sender, arg 1)
		sender = console:
			EssentialsNoCommandConsole(console)

on command "/vanish" or "/essentials:vanish":
	sender = player:
		player doesn't have permission "essentials.vanish" or "essentials.*":
			cancel event
			EssentialsNoPermission(player)

command /msg [<offline player>] [<text>]:
	aliases: essentials:msg, m, essentials:m, t, essentials:t, whisper, essentials:whisper, message, essentials:message
	description: &fEssentials command /msg.
	trigger:
		sender = player:
			arg 1 isn't set:
				EssentialsHelp(player, "MsgCMD")
			else:
				arg 1 is offline:
					EssentialsPlayerOffline(player, arg 1)
				else:
					arg 2 isn't set:
						EssentialsHelp(player, "MsgCMD")
					else:
						EssentialsCMDMsg(player, arg 1, arg 2)
		sender = console:
			EssentialsNoCommandConsole(console)

on command "/msg" or "/essentials:msg" or "/m" or "/essentials:m" or "/t" or "/essentials:t" or "/whisper" or "/essentials:whisper" or "/message" or "/essentials:message":
	sender = player:
		player doesn't have permission "essentials.msg" or "essentials.*":
			cancel event
			EssentialsNoPermission(player)

command /maintenance [<text>] [<integer>] [<text>]:
	aliases: essentials:maintenance
	description: &fEssentials command /maintenance.
	trigger:
		arg 1 isn't set:
			EssentialsHelp(sender, "MaintenanceCMD")
		else:
			arg 1 != "enable" or "on" or "disable" or "off" or "toggle":
				EssentialsHelp(sender, "MaintenanceCMD")
			arg 1 = "enable" or "on":
				EssentialsCMDMaintenance(sender, "ENABLE")
			arg 1 = "disable" or "off":
				EssentialsCMDMaintenance(sender, "DISABLE")
			arg 1 = "toggle":
				EssentialsCMDMaintenance(sender, "TOGGLE")

on command "/maintenance" or "/essentials:maintenance":
	sender = player:
		player doesn't have permission "essentials.maintenance" or "essentials.*":
			cancel event
			EssentialsNoPermission(player)

command /kickall [<text>]:
	aliases: essentials:kickall
	description: &fEssentials command /kickall.
	trigger:
		sender = player:
			arg 1 isn't set:
				EssentialsHelp(player, "KickallCMD")
			else:
				EssentialsCMDKickall(player, arg 1)
		sender = console:
			EssentialsNoCommandConsole(console)

on command "/kickall" or "/essentials:kickall":
	sender = player:
		player doesn't have permission "essentials.kickall" or "essentials.*":
			cancel event
			EssentialsNoPermission(player)

command /kick [<offline player>] [<text>]:
	aliases: essentials:kick
	description: &fEssentials command /kick.
	trigger:
		arg 1 isn't set:
			EssentialsHelp(sender, "KickCMD")
		else:
			arg 1 is offline:
				EssentialsPlayerOffline(sender, arg 1)
			else:
				arg 2 isn't set:
					EssentialsHelp(sender, "KickCMD")
				else:
					EssentialsCMDKick(sender, arg 1, arg 2)

on command "/kick" or "/essentials:kick":
	sender = player:
		player doesn't have permission "essentials.kick" or "essentials.*":
			cancel event
			EssentialsNoPermission(player)

command /kill [<offline player>] [<text>]:
	aliases: essentials:kill
	description: &fEssentials command /kill.
	trigger:
		arg 1 isn't set:
			EssentialsHelp(sender, "KillCMD")
		else:
			arg 1 is offline:
				EssentialsPlayerOffline(sender, arg 1)
			else:
				EssentialsCMDKill(sender, arg 1)

on command "/kill" or "/essentials:kill":
	sender = player:
		player doesn't have permission "essentials.kill" or "essentials.*":
			cancel event
			EssentialsNoPermission(player)

command /suicide [<offline player>] [<text>]:
	aliases: essentials:suicide
	description: &fEssentials command /suicide.
	trigger:
		sender = player:
			EssentialsCMDSuicide(sender)
		sender = console:
			EssentialsNoCommandConsole(console)

on command "/suicide" or "/essentials:suicide":
	sender = player:
		player doesn't have permission "essentials.suicide" or "essentials.*":
			cancel event
			EssentialsNoPermission(player)

command /heal [<offline player>] [<text>]:
	aliases: essentials:heal
	description: &fEssentials command /heal.
	trigger:
		arg 1 isn't set:
			EssentialsCMDHeal1(sender)
		else:
			arg 1 is offline:
				EssentialsPlayerOffline(sender, arg 1)
			else:
				EssentialsCMDHeal2(sender, arg 1)

on command "/heal" or "/essentials:heal":
	sender = player:
		player doesn't have permission "essentials.heal" or "essentials.*":
			cancel event
			EssentialsNoPermission(player)

command /feed [<offline player>] [<text>]:
	aliases: essentials:feed
	description: &fEssentials command /feed.
	trigger:
		arg 1 isn't set:
			EssentialsCMDFeed1(sender)
		else:
			arg 1 is offline:
				EssentialsPlayerOffline(sender, arg 1)
			else:
				EssentialsCMDFeed2(sender, arg 1)

on command "/feed" or "/essentials:feed":
	sender = player:
		player doesn't have permission "essentials.feed" or "essentials.*":
			cancel event
			EssentialsNoPermission(player)

command /gamemode [<text>] [<offline player>] [<text>]:
	aliases: essentials:gamemode, gm, essentials:gm
	description: &fEssentials command /gamemode.
	trigger:
		sender = player:
			arg 1 isn't set:
				EssentialsHelp(sender, "GamemodeCMD")
			else:
				arg 1 != "survival" or "creative" or "adventure" or "spectator" or "s" or "c" or "a" or "sp" or "0" or "1" or "2" or "3":
					EssentialsHelp(sender, "GamemodeCMD")
				else:
					arg 2 isn't set:
						arg 1 = "survival" or "s" or "0":
							EssentialsCMDGamemode1(sender, "SURVIVAL")
						arg 1 = "creative" or "c" or "1":
							EssentialsCMDGamemode1(sender, "CREATIVE")
						arg 1 = "adventure" or "a" or "2":
							EssentialsCMDGamemode1(sender, "ADVENTURE")
						arg 1 = "spectator" or "sp" or "3":
							EssentialsCMDGamemode1(sender, "SPECTATOR")
					else:
						arg 2 is offline:
							EssentialsPlayerOffline(sender, arg 2)
						else:
							arg 1 = "survival" or "s" or "0":
								EssentialsCMDGamemode2(sender, "SURVIVAL", arg 2)
							arg 1 = "creative" or "c" or "1":
								EssentialsCMDGamemode2(sender, "CREATIVE", arg 2)
							arg 1 = "adventure" or "a" or "2":
								EssentialsCMDGamemode2(sender, "ADVENTURE", arg 2)
							arg 1 = "spectator" or "sp" or "3":
								EssentialsCMDGamemode2(sender, "SPECTATOR", arg 2)
		sender = console:
			EssentialsNoCommandConsole(console)

on command "/gamemode" or "/essentials:gamemode" or "/gm" or "/essentials:gm":
	sender = player:
		player doesn't have permission "essentials.gamemode" or "essentials.*":
			cancel event
			EssentialsNoPermission(player)

command /mute [<offline player>] [<text>]:
	aliases: essentials:mute
	description: &fEssentials command /mute.
	trigger:
		arg 1 isn't set:
			EssentialsHelp(sender, "MuteCMD")
		else:
			arg 2 isn't set:
				EssentialsHelp(sender, "MuteCMD")
			else:
				EssentialsCMDMute(sender, arg 1, arg 2)

on command "/mute" or "/essentials:mute":
	sender = player:
		player doesn't have permission "essentials.mute" or "essentials.*":
			cancel event
			EssentialsNoPermission(player)

command /mutelist [<text>]:
	aliases: essentials:mutelist
	description: &fEssentials command /mutelist.
	trigger:
		EssentialsCMDMutelist(sender)

on command "/mutelist" or "/essentials:mutelist":
	sender = player:
		player doesn't have permission "essentials.mutelist" or "essentials.*":
			cancel event
			EssentialsNoPermission(player)

command /unmute [<offline player>] [<text>]:
	aliases: essentials:unmute
	description: &fEssentials command /unmute.
	trigger:
		arg 1 isn't set:
			EssentialsHelp(sender, "UnmuteCMD")
		else:
			EssentialsCMDUnmute(sender, arg 1)

on command "/unmute" or "/essentials:unmute":
	sender = player:
		player doesn't have permission "essentials.unmute" or "essentials.*":
			cancel event
			EssentialsNoPermission(player)

command /tempmute [<offline player>] [<text>] [<timespan>]:
	aliases: essentials:tempmute
	description: &fEssentials command /tempmute.
	trigger:
		arg 1 isn't set:
			EssentialsHelp(sender, "TempmuteCMD")
		else:
			arg 2 isn't set:
				EssentialsHelp(sender, "TempmuteCMD")
			else:
				arg 3 isn't set:
					EssentialsHelp(sender, "TempmuteCMD")
				else:
					EssentialsCMDTempmute(sender, arg 1, arg 2, arg 3)

on command "/tempmute" or "/essentials:tempmute":
	sender = player:
		player doesn't have permission "essentials.tempmute" or "essentials.*":
			cancel event
			EssentialsNoPermission(player)

command /fly [<offline player>] [<text>]:
	aliases: essentials:fly
	description: &fEssentials command /fly.
	trigger:
		arg 1 isn't set:
			EssentialsCMDFly1(sender)
		else:
			arg 1 is offline:
				EssentialsPlayerOffline(sender, arg 1)
			else:
				EssentialsCMDFly2(sender, arg 1)

on command "/fly" or "/essentials:fly":
	sender = player:
		player doesn't have permission "essentials.fly" or "essentials.*":
			cancel event
			EssentialsNoPermission(player)

command /god [<offline player>] [<text>]:
	aliases: essentials:god
	description: &fEssentials command /god.
	trigger:
		arg 1 isn't set:
			EssentialsCMDGod1(sender)
		else:
			arg 1 is offline:
				EssentialsPlayerOffline(sender, arg 1)
			else:
				EssentialsCMDGod2(sender, arg 1)

on command "/god" or "/essentials:god":
	sender = player:
		player doesn't have permission "essentials.god" or "essentials.*":
			cancel event
			EssentialsNoPermission(player)

command /time [<text>] [<text>]:
	aliases: essentials:time
	description: &fEssentials command /time.
	trigger:
		sender = player:
			arg 1 isn't set:
				EssentialsHelp(player, "TimeCMD")
			else:
				arg 1 != "set":
					EssentialsHelp(player, "TimeCMD")
				arg 1 = "set":
					arg 2 isn't set:
						EssentialsHelp(player, "TimeCMD")
					else:
						arg 2 != "day" or "night":
							EssentialsHelp(player, "TimeCMD")
						arg 2 = "day":
							EssentialsCMDTime(player, "DAY")
						arg 2 = "night":
							EssentialsCMDTime(player, "NIGHT")
		sender = console:
			EssentialsNoCommandConsole(console)

on command "/time" or "/essentials:time":
	sender = player:
		player doesn't have permission "essentials.time" or "essentials.*":
			cancel event
			EssentialsNoPermission(player)

command /day [<text>] [<text>]:
	aliases: essentials:day
	description: &fEssentials command /day.
	trigger:
		sender = player:
			EssentialsCMDTime(player, "DAY")
		sender = console:
			EssentialsNoCommandConsole(console)

on command "/day" or "/essentials:day":
	sender = player:
		player doesn't have permission "essentials.day" or "essentials.*":
			cancel event
			EssentialsNoPermission(player)

command /night [<text>] [<text>]:
	aliases: essentials:night
	description: &fEssentials command /night.
	trigger:
		sender = player:
			EssentialsCMDTime(player, "NIGHT")
		sender = console:
			EssentialsNoCommandConsole(console)

on command "/night" or "/essentials:night":
	sender = player:
		player doesn't have permission "essentials.night" or "essentials.*":
			cancel event
			EssentialsNoPermission(player)

command /sethome [<text>] [<text>]:
	aliases: essentials:sethome, createhome, essentials:createhome
	description: &fEssentials command /sethome.
	trigger:
		sender = player:
			arg 1 isn't set:
				EssentialsHelp(player, "SethomeCMD")
			else:
				EssentialsCMDSethome(player, arg 1)
		sender = console:
			EssentialsNoCommandConsole(console)

on command "/sethome" or "/essentials:sethome" or "/createhome" or "/essentials:createhome":
	sender = player:
		player doesn't have permission "essentials.sethome" or "essentials.*":
			cancel event
			EssentialsNoPermission(player)

command /delhome [<text>] [<text>]:
	aliases: essentials:delhome, deletehome, essentials:deletehome
	description: &fEssentials command /delhome.
	trigger:
		sender = player:
			arg 1 isn't set:
				EssentialsHelp(player, "DelhomeCMD")
			else:
				EssentialsCMDDelhome(player, arg 1)
		sender = console:
			EssentialsNoCommandConsole(console)

on command "/delhome" or "/essentials:delhome" or "/deletehome" or "/essentials:deletehome":
	sender = player:
		player doesn't have permission "essentials.delhome" or "essentials.*":
			cancel event
			EssentialsNoPermission(player)

command /homes [<text>] [<text>]:
	aliases: essentials:homes
	description: &fEssentials command /homes.
	trigger:
		sender = player:
			EssentialsCMDHomes(player)
		sender = console:
			EssentialsNoCommandConsole(console)

on command "/homes" or "/essentials:homes":
	sender = player:
		player doesn't have permission "essentials.homes" or "essentials.*":
			cancel event
			EssentialsNoPermission(player)

command /home [<text>] [<text>]:
	aliases: essentials:home
	description: &fEssentials command /home.
	trigger:
		sender = player:
			arg 1 isn't set:
				EssentialsHelp(player, "HomeCMD")
			else:
				EssentialsCMDHome(player, arg 1)
		sender = console:
			EssentialsNoCommandConsole(console)

on command "/home" or "/essentials:home":
	sender = player:
		player doesn't have permission "essentials.home" or "essentials.*":
			cancel event
			EssentialsNoPermission(player)

command /freeze [<offline player>] [<text>]:
	aliases: essentials:freeze
	description: &fEssentials command /freeze.
	trigger:
		sender = player:
			arg 1 isn't set:
				EssentialsHelp(player, "FreezeCMD")
			else:
				arg 1 is offline:
					EssentialsPlayerOffline(player, arg 1)
				else:
					EssentialsCMDFreeze(player, arg 1)
		sender = console:
			EssentialsNoCommandConsole(console)

on command "/freeze" or "/essentials:freeze":
	sender = player:
		player doesn't have permission "essentials.freeze" or "essentials.*":
			cancel event
			EssentialsNoPermission(player)

command /freezelist [<text>]:
	aliases: essentials:freezelist
	description: &fEssentials command /freezelist.
	trigger:
		sender = player:
			EssentialsCMDFreezelist(player)
		sender = console:
			EssentialsNoCommandConsole(console)

on command "/freezelist" or "/essentials:freezelist":
	sender = player:
		player doesn't have permission "essentials.freezelist" or "essentials.*":
			cancel event
			EssentialsNoPermission(player)

command /setkit [<text>] [<text>]:
	aliases: essentials:setkit
	description: &fEssentials command /setkit.
	trigger:
		sender = player:
			arg 1 isn't set:
				EssentialsHelp(player, "SetkitCMD")
			else:
				EssentialsCMDSetkit(player, arg 1)
		sender = console:
			EssentialsNoCommandConsole(console)

on command "/setkit" or "/essentials:setkit" or "/createkit" or "/essentials:createkit":
	sender = player:
		player doesn't have permission "essentials.setkit" or "essentials.*":
			cancel event
			EssentialsNoPermission(player)

command /delkit [<text>] [<text>]:
	aliases: essentials:delkit, deletekit, essentials:deletekit
	description: &fEssentials command /delkit.
	trigger:
		sender = player:
			arg 1 isn't set:
				EssentialsHelp(player, "DelkitCMD")
			else:
				EssentialsCMDDelkit(player, arg 1)
		sender = console:
			EssentialsNoCommandConsole(console)

on command "/delkit" or "/essentials:delkit" or "/deletekit" or "/essentials:deletekit":
	sender = player:
		player doesn't have permission "essentials.delkit" or "essentials.*":
			cancel event
			EssentialsNoPermission(player)

command /kits [<text>] [<text>]:
	aliases: essentials:kits
	description: &fEssentials command /kits.
	trigger:
		sender = player:
			EssentialsCMDKits(player)
		sender = console:
			EssentialsNoCommandConsole(console)

on command "/kits" or "/essentials:kits":
	sender = player:
		player doesn't have permission "essentials.kits" or "essentials.*":
			cancel event
			EssentialsNoPermission(player)

command /kit [<text>] [<text>]:
	aliases: essentials:kit
	description: &fEssentials command /kit.
	trigger:
		sender = player:
			arg 1 isn't set:
				EssentialsHelp(player, "KitCMD")
			else:
				EssentialsCMDKit(player, arg 1)
		sender = console:
			EssentialsNoCommandConsole(console)

command /setwarp [<text>] [<text>]:
	aliases: essentials:setwarp, createwarp, essentials:createwarp
	description: &fEssentials command /setwarp.
	trigger:
		sender = player:
			arg 1 isn't set:
				EssentialsHelp(player, "SetwarpCMD")
			else:
				EssentialsCMDSetwarp(player, arg 1)
		sender = console:
			EssentialsNoCommandConsole(console)

on command "/setwarp" or "/essentials:setwarp" or "/createwarp" or "/essentials:createwarp":
	sender = player:
		player doesn't have permission "essentials.setwarp" or "essentials.*":
			cancel event
			EssentialsNoPermission(player)

command /delwarp [<text>] [<text>]:
	aliases: essentials:delwarp, deletewarp, essentials:deletewarp
	description: &fEssentials command /delwarp.
	trigger:
		sender = player:
			arg 1 isn't set:
				EssentialsHelp(player, "DelwarpCMD")
			else:
				EssentialsCMDDelwarp(player, arg 1)
		sender = console:
			EssentialsNoCommandConsole(console)

on command "/delwarp" or "/essentials:delwarp" or "/deletewarp" or "/essentials:deletewarp":
	sender = player:
		player doesn't have permission "essentials.delwarp" or "essentials.*":
			cancel event
			EssentialsNoPermission(player)

command /warps [<text>] [<text>]:
	aliases: essentials:warps
	description: &fEssentials command /warps.
	trigger:
		sender = player:
			EssentialsCMDWarps(player)
		sender = console:
			EssentialsNoCommandConsole(console)

on command "/warps" or "/essentials:warps":
	sender = player:
		player doesn't have permission "essentials.warps" or "essentials.*":
			cancel event
			EssentialsNoPermission(player)

command /warp [<text>] [<text>]:
	aliases: essentials:warp
	description: &fEssentials command /warp.
	trigger:
		sender = player:
			arg 1 isn't set:
				EssentialsHelp(player, "WarpCMD")
			else:
				EssentialsCMDWarp(player, arg 1)
		sender = console:
			EssentialsNoCommandConsole(console)

on command "/warp" or "/essentials:warp":
	sender = player:
		player doesn't have permission "essentials.warp" or "essentials.*":
			cancel event
			EssentialsNoPermission(player)

command /seen [<offline player>] [<text>]:
	aliases: essentials:seen
	description: &fEssentials command /seen.
	trigger:
		arg 1 isn't set:
			EssentialsHelp(sender, "SeenCMD")
		else:
			arg 1 is offline:
				EssentialsPlayerOffline(sender, arg 1)
			else:
				EssentialsCMDSeen(sender, arg 1)

on command "/seen" or "/essentials:seen":
	sender = player:
		player doesn't have permission "essentials.seen" or "essentials.*":
			cancel event
			EssentialsNoPermission(player)

command /tpall [<offline player>] [<text>]:
	aliases: essentials:tpall
	description: &fEssentials command /tpall.
	trigger:
		sender = player:
			EssentialsCMDTpall(sender)
		sender = console:
			EssentialsNoCommandConsole(console)

on command "/tpall" or "/essentials:tpall":
	sender = player:
		player doesn't have permission "essentials.tpall" or "essentials.*":
			cancel event
			EssentialsNoPermission(player)

command /tpa [<offline player>] [<text>]:
	aliases: essentials:tpa
	description: &fEssentials command /tpa.
	trigger:
		sender = player:
			arg 1 isn't set:
				EssentialsHelp(player, "TpaCMD")
			else:
				arg 1 is offline:
					EssentialsPlayerOffline(player, arg 1)
				else:
					EssentialsCMDTpa(player, arg 1)
		sender = console:
			EssentialsNoCommandConsole(console)

on command "/tpa" or "/essentials:tpa":
	sender = player:
		player doesn't have permission "essentials.tpa" or "essentials.*":
			cancel event
			EssentialsNoPermission(player)

command /tpaccept [<text>]:
	aliases: essentials:tpaccept
	description: &fEssentials command /tpaccept.
	trigger:
		sender = player:
			EssentialsCMDTpaccept(player)
		sender = console:
			EssentialsNoCommandConsole(console)

on command "/tpaccept" or "/essentials:tpaccept":
	sender = player:
		player doesn't have permission "essentials.tpaccept" or "essentials.*":
			cancel event
			EssentialsNoPermission(player)

command /tpdeny [<text>]:
	aliases: essentials:tpdeny
	description: &fEssentials command /tpdeny.
	trigger:
		sender = player:
			EssentialsCMDTpdeny(player)
		sender = console:
			EssentialsNoCommandConsole(console)

on command "/tpdeny" or "/essentials:tpdeny":
	sender = player:
		player doesn't have permission "essentials.tpdeny" or "essentials.*":
			cancel event
			EssentialsNoPermission(player)

command /tp [<offline player>] [<text>]:
	aliases: essentials:tp, teleport, essentials:teleport
	description: &fEssentials command /tp.
	trigger:
		sender = player:
			arg 1 isn't set:
				EssentialsHelp(player, "TpCMD")
			else:
				arg 1 is offline:
					EssentialsPlayerOffline(player, arg 1)
				else:
					EssentialsCMDTp(player, arg 1)
		sender = console:
			EssentialsNoCommandConsole(console)

command /ping [<offline player>] [<text>]:
	aliases: essentials:ping
	description: &fEssentials command /ping.
	trigger:
		arg 1 isn't set:
			EssentialsCMDPing1(sender)
		else:
			arg 1 is offline:
				EssentialsPlayerOffline(sender, arg 1)
			else:
				EssentialsCMDPing2(sender, arg 1)

on command "/ping" or "/essentials:ping":
	sender = player:
		player doesn't have permission "essentials.ping" or "essentials.*":
			cancel event
			EssentialsNoPermission(player)

on command "/tp" or "/essentials:tp" or "/teleport" or "/essentials:teleport":
	sender = player:
		player doesn't have permission "essentials.tp" or "essentials.*":
			cancel event
			EssentialsNoPermission(player)

on sign change:
	player has permission "essentials.sign.create.back" or "essentials.sign.use.*" or "essentials.sign.*" or "essentials.*":
		line 1 = "[back]" or "[return]":
			set line 1 of block to ""
			set line 2 of block to "&1[back]"
			send "&7You have created a new panel of &6Back&7." to player

on right click on sign:
	player has permission "essentials.sign.use.back" or "essentials.sign.use.*" or "essentials.sign.*" or "essentials.*":
		line 2 of block = "&1[back]":
			EssentialsCMDBack1(player)

on sign change:
	player has permission "essentials.sign.create.bedteleport" or "essentials.sign.use.*" or "essentials.sign.*" or "essentials.*":
		line 1 = "[bedteleport]" or "[bt]":
			set line 1 of block to ""
			set line 2 of block to "&1[bedteleport]"
			send "&7You have created a new panel of &6Bedteleport&7." to player

on right click on sign:
	player has permission "essentials.sign.use.bedteleport" or "essentials.sign.use.*" or "essentials.sign.*" or "essentials.*":
		line 2 of block = "&1[bedteleport]":
			EssentialsCMDBedteleport1(player)

on sign change:
	player has permission "essentials.sign.create.clearinventory" or "essentials.sign.use.*" or "essentials.sign.*" or "essentials.*":
		line 1 = "[clearinventory]" or "[ci]" or "[clearinv]":
			set line 1 of block to ""
			set line 2 of block to "&1[clearinventory]"
			send "&7You have created a new panel of &6Clearinventory&7." to player

on right click on sign:
	player has permission "essentials.sign.use.clearinventory" or "essentials.sign.use.*" or "essentials.sign.*" or "essentials.*":
		line 2 of block = "&1[clearinventory]":
			EssentialsCMDClearinventory1(player)

on sign change:
	player has permission "essentials.sign.create.compass" or "essentials.sign.use.*" or "essentials.sign.*" or "essentials.*":
		line 1 = "[compass]" or "[direction]":
			set line 1 of block to ""
			set line 2 of block to "&1[compass]"
			send "&7You have created a new panel of &6Compass&7." to player

on right click on sign:
	player has permission "essentials.sign.use.compass" or "essentials.sign.use.*" or "essentials.sign.*" or "essentials.*":
		line 2 of block = "&1[compass]":
			EssentialsCMDCompass1(player)

on sign change:
	player has permission "essentials.sign.create.tps" or "essentials.sign.use.*" or "essentials.sign.*" or "essentials.*":
		line 1 = "[tps]":
			set line 1 of block to ""
			set line 2 of block to "&1[tps]"
			send "&7You have created a new panel of &6Tps&7." to player

on right click on sign:
	player has permission "essentials.sign.use.tps" or "essentials.sign.use.*" or "essentials.sign.*" or "essentials.*":
		line 2 of block = "&1[tps]":
			EssentialsCMDTps(player)

on sign change:
	player has permission "essentials.sign.create.workbench" or "essentials.sign.use.*" or "essentials.sign.*" or "essentials.*":
		line 1 = "[workbench]":
			set line 1 of block to ""
			set line 2 of block to "&1[workbench]"
			send "&7You have created a new panel of &6Workbench&7." to player

on right click on sign:
	player has permission "essentials.sign.use.workbench" or "essentials.sign.use.*" or "essentials.sign.*" or "essentials.*":
		line 2 of block = "&1[workbench]":
			EssentialsCMDWorkbench1(player)

on sign change:
	player has permission "essentials.sign.create.getpos" or "essentials.sign.use.*" or "essentials.sign.*" or "essentials.*":
		line 1 = "[getpos]":
			set line 1 of block to ""
			set line 2 of block to "&1[getpos]"
			send "&7You have created a new panel of &6Getpos&7." to player

on right click on sign:
	player has permission "essentials.sign.use.getpos" or "essentials.sign.use.*" or "essentials.sign.*" or "essentials.*":
		line 2 of block = "&1[getpos]":
			EssentialsCMDGetpos1(player)

on sign change:
	player has permission "essentials.sign.create.seed" or "essentials.sign.use.*" or "essentials.sign.*" or "essentials.*":
		line 1 = "[seed]":
			set line 1 of block to ""
			set line 2 of block to "&1[seed]"
			send "&7You have created a new panel of &6Seed&7." to player

on right click on sign:
	player has permission "essentials.sign.use.seed" or "essentials.sign.use.*" or "essentials.sign.*" or "essentials.*":
		line 2 of block = "&1[seed]":
			EssentialsCMDGetpos1(player)

on sign change:
	player has permission "essentials.sign.create.enderchest" or "essentials.sign.use.*" or "essentials.sign.*" or "essentials.*":
		line 1 = "[enderchest]":
			set line 1 of block to ""
			set line 2 of block to "&1[enderchest]"
			send "&7You have created a new panel of &6Enderchest&7." to player

on right click on sign:
	player has permission "essentials.sign.use.enderchest" or "essentials.sign.use.*" or "essentials.sign.*" or "essentials.*":
		line 2 of block = "&1[enderchest]":
			EssentialsCMDEnderchest1(player)

on sign change:
	player has permission "essentials.sign.create.list" or "essentials.sign.use.*" or "essentials.sign.*" or "essentials.*":
		line 1 = "[list]":
			set line 1 of block to ""
			set line 2 of block to "&1[list]"
			send "&7You have created a new panel of &6List&7." to player

on right click on sign:
	player has permission "essentials.sign.use.list" or "essentials.sign.use.*" or "essentials.sign.*" or "essentials.*":
		line 2 of block = "&1[list]":
			EssentialsCMDList(player)

on sign change:
	player has permission "essentials.sign.create.randomteleport" or "essentials.sign.use.*" or "essentials.sign.*" or "essentials.*":
		line 1 = "[rtp]":
			set line 1 of block to ""
			set line 2 of block to "&1[rtp]"
			send "&7You have created a new panel of &6RandomTeleport&7." to player

on right click on sign:
	player has permission "essentials.sign.use.randomteleport" or "essentials.sign.use.*" or "essentials.sign.*" or "essentials.*":
		line 2 of block = "&1[rtp]":
			EssentialsCMDRandomTeleport(player)

on sign change:
	player has permission "essentials.sign.create.repair" or "essentials.sign.use.*" or "essentials.sign.*" or "essentials.*":
		line 1 = "[repair]":
			set line 1 of block to ""
			set line 2 of block to "&1[repair]"
			send "&7You have created a new panel of &6Repair&7." to player

on right click on sign:
	player has permission "essentials.sign.use.repair" or "essentials.sign.use.*" or "essentials.sign.*" or "essentials.*":
		line 2 of block = "&1[repair]":
			EssentialsCMDRepair(player, "ONE")

on sign change:
	player has permission "essentials.sign.create.depth" or "essentials.sign.use.*" or "essentials.sign.*" or "essentials.*":
		line 1 = "[depth]":
			set line 1 of block to ""
			set line 2 of block to "&1[depth]"
			send "&7You have created a new panel of &6Depth&7." to player

on right click on sign:
	player has permission "essentials.sign.use.depth" or "essentials.sign.use.*" or "essentials.sign.*" or "essentials.*":
		line 2 of block = "&1[depth]":
			EssentialsCMDDepth1(player)

on sign change:
	player has permission "essentials.sign.create.extinguish" or "essentials.sign.use.*" or "essentials.sign.*" or "essentials.*":
		line 1 = "[extinguish]" or "[ext]":
			set line 1 of block to ""
			set line 2 of block to "&1[extinguish]"
			send "&7You have created a new panel of &6Extinguish&7." to player

on right click on sign:
	player has permission "essentials.sign.use.extinguish" or "essentials.sign.use.*" or "essentials.sign.*" or "essentials.*":
		line 2 of block = "&1[extinguish]":
			EssentialsCMDExtinguish1(player)

on sign change:
	player has permission "essentials.sign.create.unenchant" or "essentials.sign.use.*" or "essentials.sign.*" or "essentials.*":
		line 1 = "[unenchant]":
			set line 1 of block to ""
			set line 2 of block to "&1[unenchant]"
			send "&7You have created a new panel of &6Unenchant&7." to player

on right click on sign:
	player has permission "essentials.sign.use.unenchant" or "essentials.sign.use.*" or "essentials.sign.*" or "essentials.*":
		line 2 of block = "&1[unenchant]":
			EssentialsCMDUnenchant1(player)

on sign change:
	player has permission "essentials.sign.create.spawn" or "essentials.sign.use.*" or "essentials.sign.*" or "essentials.*":
		line 1 = "[spawn]":
			set line 1 of block to ""
			set line 2 of block to "&1[spawn]"
			send "&7You have created a new panel of &6Spawn&7." to player

on right click on sign:
	player has permission "essentials.sign.use.spawn" or "essentials.sign.use.*" or "essentials.sign.*" or "essentials.*":
		line 2 of block = "&1[spawn]":
			EssentialsCMDSpawn1(player)

on sign change:
	player has permission "essentials.sign.create.vanish" or "essentials.sign.use.*" or "essentials.sign.*" or "essentials.*":
		line 1 = "[vanish]":
			set line 1 of block to ""
			set line 2 of block to "&1[vanish]"
			send "&7You have created a new panel of &6Vanish&7." to player

on right click on sign:
	player has permission "essentials.sign.use.vanish" or "essentials.sign.use.*" or "essentials.sign.*" or "essentials.*":
		line 2 of block = "&1[vanish]":
			EssentialsCMDVanish1(player)

on sign change:
	player has permission "essentials.sign.create.suicide" or "essentials.sign.use.*" or "essentials.sign.*" or "essentials.*":
		line 1 = "[suicide]":
			set line 1 of block to ""
			set line 2 of block to "&1[suicide]"
			send "&7You have created a new panel of &6Suicide&7." to player

on right click on sign:
	player has permission "essentials.sign.use.suicide" or "essentials.sign.use.*" or "essentials.sign.*" or "essentials.*":
		line 2 of block = "&1[suicide]":
			EssentialsCMDSuicide(player)

on sign change:
	player has permission "essentials.sign.create.heal" or "essentials.sign.use.*" or "essentials.sign.*" or "essentials.*":
		line 1 = "[heal]":
			set line 1 of block to ""
			set line 2 of block to "&1[heal]"
			send "&7You have created a new panel of &6Heal&7." to player

on right click on sign:
	player has permission "essentials.sign.use.heal" or "essentials.sign.use.*" or "essentials.sign.*" or "essentials.*":
		line 2 of block = "&1[heal]":
			EssentialsCMDHeal1(player)

on sign change:
	player has permission "essentials.sign.create.feed" or "essentials.sign.use.*" or "essentials.sign.*" or "essentials.*":
		line 1 = "[feed]":
			set line 1 of block to ""
			set line 2 of block to "&1[feed]"
			send "&7You have created a new panel of &6Feed&7." to player

on right click on sign:
	player has permission "essentials.sign.use.feed" or "essentials.sign.use.*" or "essentials.sign.*" or "essentials.*":
		line 2 of block = "&1[feed]":
			EssentialsCMDFeed1(player)

on sign change:
	player has permission "essentials.sign.create.fly" or "essentials.sign.use.*" or "essentials.sign.*" or "essentials.*":
		line 1 = "[fly]":
			set line 1 of block to ""
			set line 2 of block to "&1[fly]"
			send "&7You have created a new panel of &6Fly&7." to player

on right click on sign:
	player has permission "essentials.sign.use.fly" or "essentials.sign.use.*" or "essentials.sign.*" or "essentials.*":
		line 2 of block = "&1[fly]":
			EssentialsCMDFly1(player)

on sign change:
	player has permission "essentials.sign.create.god" or "essentials.sign.use.*" or "essentials.sign.*" or "essentials.*":
		line 1 = "[god]":
			set line 1 of block to ""
			set line 2 of block to "&1[god]"
			send "&7You have created a new panel of &6God&7." to player

on right click on sign:
	player has permission "essentials.sign.use.god" or "essentials.sign.use.*" or "essentials.sign.*" or "essentials.*":
		line 2 of block = "&1[god]":
			EssentialsCMDFly1(player)

on sign change:
	player has permission "essentials.sign.create.ping" or "essentials.sign.use.*" or "essentials.sign.*" or "essentials.*":
		line 1 = "[ping]":
			set line 1 of block to ""
			set line 2 of block to "&1[ping]"
			send "&7You have created a new panel of &6Ping&7." to player

on right click on sign:
	player has permission "essentials.sign.use.ping" or "essentials.sign.use.*" or "essentials.sign.*" or "essentials.*":
		line 2 of block = "&1[ping]":
			EssentialsCMDPing1(player)
